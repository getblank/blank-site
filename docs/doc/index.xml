<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on BLANK cloud platform</title>
    <link>https://getblank.net/doc/</link>
    <description>Recent content in Docs on BLANK cloud platform</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Sep 2016 17:16:00 +0500</lastBuildDate>
    <atom:link href="https://getblank.net/doc/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Actions</title>
      <link>https://getblank.net/doc/actions/</link>
      <pubDate>Thu, 08 Sep 2016 17:16:00 +0500</pubDate>
      
      <guid>https://getblank.net/doc/actions/</guid>
      <description>

&lt;p&gt;Actions&amp;nbsp;&amp;mdash; скрипты на JavaScript, производящие некоторые действия над объектами, хранящимися в Store.
Действия доступны через Websocket API и REST API. Формат описания Actions подробно рассмотрен в &lt;a href=&#34;https://getblank.net/doc/store_reference/#actions&#34;&gt;Store Reference&lt;/a&gt;.
Выполнять Actions могут только авторизованные пользователи.&lt;/p&gt;

&lt;p&gt;Скрипты имееют возможность выполнять запросы к базе данных с помощью модуля &lt;a href=&#34;https://getblank.net/doc/db/&#34;&gt;$db&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;доступные-объекты&#34;&gt;Доступные объекты&lt;/h3&gt;

&lt;h4 id=&#34;item&#34;&gt;$item&lt;/h4&gt;

&lt;p&gt;Объект над которым выполняется Action. Для &lt;a href=&#34;https://getblank.net/doc/store_reference/#storeactions&#34;&gt;StoreActions&lt;/a&gt; &lt;code&gt;$item&lt;/code&gt; не передаётся.&lt;/p&gt;

&lt;h4 id=&#34;user&#34;&gt;$user&lt;/h4&gt;

&lt;p&gt;Пользователь, выполняющий Action.&lt;/p&gt;

&lt;h4 id=&#34;data&#34;&gt;$data&lt;/h4&gt;

&lt;p&gt;Данные формы, заполненной пользователем, в случае, если определены &lt;code&gt;props&lt;/code&gt; для Action.&lt;/p&gt;

&lt;h4 id=&#34;filter&#34;&gt;$filter&lt;/h4&gt;

&lt;p&gt;Только для &lt;a href=&#34;https://getblank.net/doc/store_reference/#storeactions&#34;&gt;StoreActions&lt;/a&gt;. При вызове из веб-приложения содержит текущие значения фильтров.&lt;/p&gt;

&lt;h4 id=&#34;request&#34;&gt;$request&lt;/h4&gt;

&lt;p&gt;Данные HTTP запроса, в случае, если Action.type установлен в &lt;code&gt;http&lt;/code&gt;, либо если Action вызывается через &lt;a href=&#34;https://getblank.net/doc/httprest/&#34;&gt;REST API&lt;/a&gt;.
Подробнее об объекте &lt;code&gt;$request&lt;/code&gt; читайте в разделе &lt;a href=&#34;https://getblank.net/doc/request/&#34;&gt;Serverside JS API: $request&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;возврат-результата&#34;&gt;Возврат результата&lt;/h3&gt;

&lt;p&gt;В случае, если скрипт возвращает какие-либо данные, они будут переданы инициатору вызова Action.
Если скрипт выполнился неудачно, следует &amp;laquo;бросить ошибку&amp;raquo;. Для передачи текста ошибки,
используется объект &lt;code&gt;UserError&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;throw new Error(&amp;quot;some error&amp;quot;); // текст ошибки будет выведен в логе, но не передан инициатору.
throw new UserError(&amp;quot;some error with text&amp;quot;); // текст ошибки будет выведен в логе, и передан инициатору.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Если скрипт выполняет асинхронные инструкции, следует вернуть &lt;code&gt;Promise&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Для HTTP Actions возвращаемый объект должен соответствовать структуре &lt;code&gt;Response&lt;/code&gt; описанной в  &lt;a href=&#34;https://getblank.net/doc/httphooks/#structure&#34;&gt;HTTP Hooks&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Конфигурация</title>
      <link>https://getblank.net/doc/settings/</link>
      <pubDate>Thu, 08 Sep 2016 15:11:25 +0500</pubDate>
      
      <guid>https://getblank.net/doc/settings/</guid>
      <description>

&lt;p&gt;Настройка Blank производится в нескольких Store типа &lt;code&gt;map&lt;/code&gt;, описанных в формате &lt;a href=&#34;https://getblank.net/doc/schema/&#34;&gt;Blank Schema&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/settings/#server&#34;&gt;_serverSettings&lt;/a&gt;&amp;nbsp;&amp;mdash; параметры сервера;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/settings/#common&#34;&gt;_commonSettings&lt;/a&gt;&amp;nbsp;&amp;mdash; параметры, которые являются общими как для сервера, так и для клиентского приложения;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/settings/#_nav&#34;&gt;_nav&lt;/a&gt;&amp;nbsp;&amp;mdash; описание навигации клиентского приложения;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;server&#34;&gt;_serverSettings&lt;/h3&gt;

&lt;p&gt;Используется для переопределения параметров работы серверных приложений.&lt;/p&gt;

&lt;h4 id=&#34;конфигурация-по-умолчанию&#34;&gt;Конфигурация по-умолчанию&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;_serverSettings: {
        type: &amp;quot;map&amp;quot;,
        entries: {
            registerTokenExpiration: &amp;quot;0:60&amp;quot;,
            passwordResetTokenExpiration: &amp;quot;0:10&amp;quot;,
            facebookClientSecret: undefined,
        },
},
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;registerTokenExpiration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Время, отведённое на активацию зарегистрированных пользователей. Задается в формате &lt;code&gt;HH:MM&lt;/code&gt;, где &lt;code&gt;HH&lt;/code&gt;&amp;nbsp;&amp;mdash; часы,
а &lt;code&gt;MM&lt;/code&gt;&amp;nbsp;&amp;mdash; минуты. В случае неактивации, по истечении указанного времени, пользовательский аккаунт будет удалён из системы.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;passwordResetTokenExpiration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Время жизни токена для сброса пароля. Задается в формате &lt;code&gt;HH:MM&lt;/code&gt;, где &lt;code&gt;HH&lt;/code&gt;&amp;nbsp;&amp;mdash; часы,
а &lt;code&gt;MM&lt;/code&gt;&amp;nbsp;&amp;mdash; минуты. По истечении указанного времени, токен обнуляется.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;facebookClientSecret&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Секретный ключ для &lt;a href=&#34;https://getblank.net/doc/facebook/&#34;&gt;интеграции с Facebook&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;common&#34;&gt;_commonSettings&lt;/h3&gt;

&lt;p&gt;Используется для переопределения параметров, которые являются общими как для сервера, так и для клиентского приложения.&lt;/p&gt;

&lt;h4 id=&#34;конфигурация-по-умолчанию-1&#34;&gt;Конфигурация по-умолчанию&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;_commonSettings: {
        type: &amp;quot;map&amp;quot;,
        entries: {
            title: &amp;quot;Default title&amp;quot;,
            titleHref: undefined,
            titleIcon: undefined,
            locales: [&amp;quot;en&amp;quot;, &amp;quot;ru&amp;quot;],
            defaultLocale: &amp;quot;en&amp;quot;,
            meta: [
                { name: &amp;quot;description&amp;quot;, content: &amp;quot;Application description&amp;quot; },
                { name: &amp;quot;author&amp;quot;, content: &amp;quot;Application author&amp;quot; },
            ],
            links: [
                { rel: &amp;quot;canonical&amp;quot;, href: &amp;quot;http://mysite.com/example&amp;quot; },
            ],
            scripts: [],
            lessVars: {},
            facebookClientId: undefined,
            signInProps: {
                login: {
                    type: &amp;quot;string&amp;quot;,
                    display: &amp;quot;textInput&amp;quot;,
                    label: &amp;quot;{{$i18n.$settings.common.email}}&amp;quot;,
                    required: true,
                    formOrder: 1,
                },
                password: {
                    type: &amp;quot;string&amp;quot;,
                    display: &amp;quot;password&amp;quot;,
                    label: &amp;quot;{{$i18n.$settings.common.password}}&amp;quot;,
                    required: true,
                    formOrder: 2,
                },
            },
            userActivation: false,
            resetPasswordDisabled: false,
            signUpDisabled: false,
            resetPasswordProps: {
                password: {
                    type: &amp;quot;string&amp;quot;,
                    display: &amp;quot;password&amp;quot;,
                    label: &amp;quot;{{$i18n.$settings.resetPassword.newPassword}}&amp;quot;,
                    required: true,
                    formOrder: 2,
                },
            },
            resetPasswordRequestProps: {
                email: {
                    type: &amp;quot;string&amp;quot;,
                    display: &amp;quot;textInput&amp;quot;,
                    label: &amp;quot;{{$i18n.$settings.common.email}}&amp;quot;,
                    required: true,
                    pattern: { expression: &amp;quot;^\\S+@\\S+\\.\\S+$&amp;quot;, message: &amp;quot;{{$i18n.$settings.signUp.invalidEmail}}&amp;quot; },
                },
            },
            signUpProps: {
                email: {
                    type: &amp;quot;string&amp;quot;,
                    display: &amp;quot;newUsernameInput&amp;quot;,
                    pattern: { expression: &amp;quot;^\\S+@\\S+\\.\\S+$&amp;quot;, message: &amp;quot;{{$i18n.$settings.signUp.invalidEmail}}&amp;quot; },
                    label: &amp;quot;{{$i18n.$settings.common.email}}&amp;quot;,
                    required: true,
                    formOrder: 1,
                },
                password: {
                    type: &amp;quot;string&amp;quot;,
                    display: &amp;quot;password&amp;quot;,
                    label: &amp;quot;{{$i18n.$settings.common.password}}&amp;quot;,
                    required: true,
                    formOrder: 2,
                },
                eula: {
                    type: &amp;quot;bool&amp;quot;,
                    display: &amp;quot;checkbox&amp;quot;,
                    label: &amp;quot;{{{$i18n.$settings.signUp.eulaCheck}}}&amp;quot;,
                    required: true,
                    formOrder: 4,
                },
            },
        },
},
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a name=&#34;defaultLocale&#34;&gt;
&lt;strong&gt;defaultLocale&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Локаль по-умолчанию (string).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;facebookClientId&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Идентификатор приложения для &lt;a href=&#34;https://getblank.net/doc/facebook/&#34;&gt;интеграции с Facebook&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;lessVars&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Переопредяет CSS параметры клиентского приложения.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;links&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Определения дополнительные &lt;code&gt;link&lt;/code&gt; тэги в разделе &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; клиентского приложения.
Например, можно туда поместить дополнительные css файлы, необходимые для работы приложения.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;locales&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Переопределеяет набор локалей приложения (array of string).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;meta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Определяет дополнительные &lt;code&gt;meta&lt;/code&gt; тэги в разделе &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; клиентского приложения.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;resetPasswordDisabled&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Запрет сброса пароля (bool). Если установлен в &lt;code&gt;true&lt;/code&gt;, то в клиентском приложении не будет показан диалог сброса пароля.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;resetPasswordProps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Переопределяет набор и характеристики диалога сброса пароля.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;resetPasswordRequestProps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Переопределяет набор и характеристики диалога запроса сброса пароля.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;scripts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Определяет дополнительные &lt;code&gt;script&lt;/code&gt; тэги в разделе &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; клиентского приложения.
Например, можно использовать для загрузки дополнительных JavaScript файлов, необходимых для работы приложения.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;signInProps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Переопределяет набор и характеристики диалога входа в систему.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;signUpDisabled&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Запрет самостоятельной регистрации пользователей (bool). Если установлен в &lt;code&gt;true&lt;/code&gt;, то в клиентском приложении не будет показан диалог регистрации.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;signUpProps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Переопределяет набор и характеристики диалога самостоятельной регистрации пользователей.
Дополнительные поля будут переданы в создаваемый профиль пользователя.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;title&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Переопределяет содержимое тэга &lt;code&gt;title&lt;/code&gt; и заголовок клиентского приложения.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;titleHref&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Переопределяет ссылку в заголовке клиентского приложения.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;titleIcon&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Определяет изображение в заголовке клиентского приложения (ссылка на файл, может быть относительной, например &amp;ldquo;favicon.png&amp;rdquo;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;userActivation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Включает необходимость активации учетных записей пользователей. Если установлен в &lt;code&gt;true&lt;/code&gt;, только что зарегистрированному пользователю
на адрес электронной почты будет отправлено письмо со ссылкой на страницу активации учетной записи.&lt;/p&gt;

&lt;h3 id=&#34;_nav&#34;&gt;_nav&lt;/h3&gt;

&lt;p&gt;Используется для определения структуры навигации клиентского приложения.&lt;/p&gt;

&lt;h4 id=&#34;конфигурация-по-умолчанию-2&#34;&gt;Конфигурация по-умолчанию&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;_nav: {
    type: &amp;quot;map&amp;quot;,
    entries: {
        config&amp;quot;: {
            label: &amp;quot;Administration&amp;quot;,
        },
    },
},
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>$request</title>
      <link>https://getblank.net/doc/request/</link>
      <pubDate>Thu, 08 Sep 2016 13:13:20 +0500</pubDate>
      
      <guid>https://getblank.net/doc/request/</guid>
      <description>

&lt;p&gt;Объект &lt;code&gt;$request&lt;/code&gt; передается обработчикам &lt;code&gt;HTTP Hooks&lt;/code&gt;, &lt;code&gt;Actions&lt;/code&gt; и &lt;code&gt;StoreActions&lt;/code&gt; с типом &lt;code&gt;http&lt;/code&gt;, либо доступным через &lt;a href=&#34;https://getblank.net/doc/httprest/&#34;&gt;REST API&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;параметры&#34;&gt;Параметры&lt;/h3&gt;

&lt;h4 id=&#34;body&#34;&gt;body&lt;/h4&gt;

&lt;p&gt;Содержимое HTTP запроса.&lt;/p&gt;

&lt;h4 id=&#34;form&#34;&gt;form&lt;/h4&gt;

&lt;p&gt;Содержимое отправленной формы в виде JavaScript Object.&lt;/p&gt;

&lt;h4 id=&#34;header&#34;&gt;header&lt;/h4&gt;

&lt;p&gt;Содержимое HTTP заголовка в виде JavaScript Object.&lt;/p&gt;

&lt;h4 id=&#34;ip&#34;&gt;ip&lt;/h4&gt;

&lt;p&gt;IP адрес инициатора HTTP запроса.&lt;/p&gt;

&lt;h4 id=&#34;params&#34;&gt;params&lt;/h4&gt;

&lt;p&gt;Содержит данные параметров, определённых в свойстве &lt;code&gt;uri&lt;/code&gt; &lt;code&gt;HTTP Hooks&lt;/code&gt;. Пример записи &lt;code&gt;uri&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;{
    uri: &amp;quot;user/:id&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Таким образом, идентификатор пользователя (параметр &lt;code&gt;:id&lt;/code&gt;) будет доступен через:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;$request.params[&amp;quot;id&amp;quot;];
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;query&#34;&gt;query&lt;/h4&gt;

&lt;p&gt;Содержит параметры запроса из URL в виде JavaScript Object.&lt;/p&gt;

&lt;p&gt;Например, для запроса &lt;code&gt;http://some.domain/?foo=bar&amp;amp;bar=baz&lt;/code&gt;, &lt;code&gt;query&lt;/code&gt; будет содержать следующий объект:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;{
    foo: [&amp;quot;bar&amp;quot;],
    bar: [&amp;quot;baz&amp;quot;]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;referer&#34;&gt;referer&lt;/h4&gt;

&lt;p&gt;Содержит значение HTTP заголовка &lt;code&gt;Referer&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Queue</title>
      <link>https://getblank.net/doc/queue/</link>
      <pubDate>Thu, 08 Sep 2016 13:08:20 +0500</pubDate>
      
      <guid>https://getblank.net/doc/queue/</guid>
      <description>

&lt;p&gt;Модуль &lt;code&gt;queue&lt;/code&gt; предназначен для работы с сервером очередей Blank, представляющим сервис,
двусвязных списков и очередей. В данный момент доступен только сервис двусвязных списков.&lt;/p&gt;

&lt;h3 id=&#34;подключение&#34;&gt;Подключение&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;let List = require(&amp;quot;queue&amp;quot;).List;
let list = new List(&amp;quot;listName&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;back&#34;&gt;back()&lt;/h3&gt;

&lt;p&gt;Переводит курсор в конец списка.&lt;/p&gt;

&lt;h4 id=&#34;синтаксис&#34;&gt;Синтаксис&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;queue.back(callback)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;параметры&#34;&gt;Параметры&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Функция, которая будет выполнена по завершению (опционально).&lt;/p&gt;

&lt;h4 id=&#34;возвращаемые-значения&#34;&gt;Возвращаемые значения&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; в случае переданной функции &lt;code&gt;callback&lt;/code&gt; или &lt;code&gt;Promise&lt;/code&gt;, если функция не передавалась.
При успешном выполнении, результатом будет элемент списка.&lt;/p&gt;

&lt;h3 id=&#34;drop&#34;&gt;drop()&lt;/h3&gt;

&lt;p&gt;Удаляет список на сервере.&lt;/p&gt;

&lt;h4 id=&#34;синтаксис-1&#34;&gt;Синтаксис&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;queue.drop(callback)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;параметры-1&#34;&gt;Параметры&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Функция, которая будет выполнена по завершению (опционально).&lt;/p&gt;

&lt;h4 id=&#34;возвращаемые-значения-1&#34;&gt;Возвращаемые значения&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; в случае переданной функции &lt;code&gt;callback&lt;/code&gt; или &lt;code&gt;Promise&lt;/code&gt;, если функция не передавалась.&lt;/p&gt;

&lt;h3 id=&#34;front&#34;&gt;front()&lt;/h3&gt;

&lt;p&gt;Переводит курсор в начало списка.&lt;/p&gt;

&lt;h4 id=&#34;синтаксис-2&#34;&gt;Синтаксис&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;queue.front(callback)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;параметры-2&#34;&gt;Параметры&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Функция, которая будет выполнена по завершению (опционально).&lt;/p&gt;

&lt;h4 id=&#34;возвращаемые-значения-2&#34;&gt;Возвращаемые значения&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; в случае переданной функции &lt;code&gt;callback&lt;/code&gt; или &lt;code&gt;Promise&lt;/code&gt;, если функция не передавалась.
При успешном выполнении, результатом будет элемент списка.&lt;/p&gt;

&lt;h3 id=&#34;getbyid&#34;&gt;getById()&lt;/h3&gt;

&lt;p&gt;Возвращает элемент списка с указанным идентификатором. Идентификатором элемента является свойство &lt;code&gt;_id&lt;/code&gt;, в случае,
если элемент представляет собой JavaScript Object. Не передвигает курсор.&lt;/p&gt;

&lt;h4 id=&#34;синтаксис-3&#34;&gt;Синтаксис&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;queue.getById(callback)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;параметры-3&#34;&gt;Параметры&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Функция, которая будет выполнена по завершению (опционально).&lt;/p&gt;

&lt;h4 id=&#34;возвращаемые-значения-3&#34;&gt;Возвращаемые значения&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; в случае переданной функции &lt;code&gt;callback&lt;/code&gt; или &lt;code&gt;Promise&lt;/code&gt;, если функция не передавалась.
При успешном выполнении, результатом будет элемент списка.&lt;/p&gt;

&lt;h3 id=&#34;gotoposition&#34;&gt;gotoPosition()&lt;/h3&gt;

&lt;p&gt;Переводит курсор на указанную позицию в списке.&lt;/p&gt;

&lt;h4 id=&#34;синтаксис-4&#34;&gt;Синтаксис&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;queue.gotoPosition(callback)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;параметры-4&#34;&gt;Параметры&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Функция, которая будет выполнена по завершению перевод (опционально).&lt;/p&gt;

&lt;h4 id=&#34;возвращаемые-значения-4&#34;&gt;Возвращаемые значения&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; в случае переданной функции &lt;code&gt;callback&lt;/code&gt; или &lt;code&gt;Promise&lt;/code&gt;, если функция не передавалась.
При успешном выполнении, результатом будет элемент списка.&lt;/p&gt;

&lt;h3 id=&#34;length&#34;&gt;length()&lt;/h3&gt;

&lt;p&gt;Возвращает количество элементов списка.&lt;/p&gt;

&lt;h4 id=&#34;синтаксис-5&#34;&gt;Синтаксис&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;queue.length(callback)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;параметры-5&#34;&gt;Параметры&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Функция, которая будет выполнена по завершению (опционально).&lt;/p&gt;

&lt;h4 id=&#34;возвращаемые-значения-5&#34;&gt;Возвращаемые значения&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; в случае переданной функции &lt;code&gt;callback&lt;/code&gt; или &lt;code&gt;Promise&lt;/code&gt;, если функция не передавалась.&lt;/p&gt;

&lt;h3 id=&#34;next&#34;&gt;next()&lt;/h3&gt;

&lt;p&gt;Переводит курсор на следующий элемент списка.&lt;/p&gt;

&lt;h4 id=&#34;синтаксис-6&#34;&gt;Синтаксис&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;queue.next(callback)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;параметры-6&#34;&gt;Параметры&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Функция, которая будет выполнена по завершению (опционально).&lt;/p&gt;

&lt;h4 id=&#34;возвращаемые-значения-6&#34;&gt;Возвращаемые значения&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; в случае переданной функции &lt;code&gt;callback&lt;/code&gt; или &lt;code&gt;Promise&lt;/code&gt;, если функция не передавалась.
При успешном выполнении, результатом будет элемент списка.&lt;/p&gt;

&lt;h3 id=&#34;position&#34;&gt;position()&lt;/h3&gt;

&lt;p&gt;Возвращает позицию текущего элемента списка.&lt;/p&gt;

&lt;h4 id=&#34;синтаксис-7&#34;&gt;Синтаксис&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;queue.position(callback)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;параметры-7&#34;&gt;Параметры&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Функция, которая будет выполнена по завершению (опционально).&lt;/p&gt;

&lt;h4 id=&#34;возвращаемые-значения-7&#34;&gt;Возвращаемые значения&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; в случае переданной функции &lt;code&gt;callback&lt;/code&gt; или &lt;code&gt;Promise&lt;/code&gt;, если функция не передавалась.&lt;/p&gt;

&lt;h3 id=&#34;prev&#34;&gt;prev()&lt;/h3&gt;

&lt;p&gt;Переводит курсор на предыдущий элемент списка.&lt;/p&gt;

&lt;h4 id=&#34;синтаксис-8&#34;&gt;Синтаксис&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;queue.prev(callback)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;параметры-8&#34;&gt;Параметры&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Функция, которая будет выполнена по завершению (опционально).&lt;/p&gt;

&lt;h4 id=&#34;возвращаемые-значения-8&#34;&gt;Возвращаемые значения&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; в случае переданной функции &lt;code&gt;callback&lt;/code&gt; или &lt;code&gt;Promise&lt;/code&gt;, если функция не передавалась.
При успешном выполнении, результатом будет элемент списка.&lt;/p&gt;

&lt;h3 id=&#34;pushback&#34;&gt;pushBack()&lt;/h3&gt;

&lt;p&gt;Добавляет элемент в конец списка.&lt;/p&gt;

&lt;h4 id=&#34;синтаксис-9&#34;&gt;Синтаксис&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;queue.pushBack(callback)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;параметры-9&#34;&gt;Параметры&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Функция, которая будет выполнена по завершению (опционально).&lt;/p&gt;

&lt;h4 id=&#34;возвращаемые-значения-9&#34;&gt;Возвращаемые значения&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; в случае переданной функции &lt;code&gt;callback&lt;/code&gt; или &lt;code&gt;Promise&lt;/code&gt;, если функция не передавалась.
При успешном выполнении, результатом будет позиция добавленного в список элемента.&lt;/p&gt;

&lt;h3 id=&#34;pushfront&#34;&gt;pushFront()&lt;/h3&gt;

&lt;p&gt;Добавляет элемент в начало списка.&lt;/p&gt;

&lt;h4 id=&#34;синтаксис-10&#34;&gt;Синтаксис&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;queue.pushFront(callback)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;параметры-10&#34;&gt;Параметры&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Функция, которая будет выполнена по завершению (опционально).&lt;/p&gt;

&lt;h4 id=&#34;возвращаемые-значения-10&#34;&gt;Возвращаемые значения&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; в случае переданной функции &lt;code&gt;callback&lt;/code&gt; или &lt;code&gt;Promise&lt;/code&gt;, если функция не передавалась.
При успешном выполнении, результатом будет позиция добавленного в список элемента.&lt;/p&gt;

&lt;h3 id=&#34;remove&#34;&gt;remove()&lt;/h3&gt;

&lt;p&gt;Удаляет текущий элемент из списка.&lt;/p&gt;

&lt;h4 id=&#34;синтаксис-11&#34;&gt;Синтаксис&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;queue.remove(callback)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;параметры-11&#34;&gt;Параметры&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Функция, которая будет выполнена по завершению (опционально).&lt;/p&gt;

&lt;h4 id=&#34;возвращаемые-значения-11&#34;&gt;Возвращаемые значения&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; в случае переданной функции &lt;code&gt;callback&lt;/code&gt; или &lt;code&gt;Promise&lt;/code&gt;, если функция не передавалась.&lt;/p&gt;

&lt;h3 id=&#34;update&#34;&gt;update()&lt;/h3&gt;

&lt;p&gt;Изменяет текущий элемент из списка.&lt;/p&gt;

&lt;h4 id=&#34;синтаксис-12&#34;&gt;Синтаксис&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;queue.update(callback)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;параметры-12&#34;&gt;Параметры&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Функция, которая будет выполнена по завершению (опционально).&lt;/p&gt;

&lt;h4 id=&#34;возвращаемые-значения-12&#34;&gt;Возвращаемые значения&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; в случае переданной функции &lt;code&gt;callback&lt;/code&gt; или &lt;code&gt;Promise&lt;/code&gt;, если функция не передавалась.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I18n</title>
      <link>https://getblank.net/doc/i18n/</link>
      <pubDate>Thu, 08 Sep 2016 13:07:50 +0500</pubDate>
      
      <guid>https://getblank.net/doc/i18n/</guid>
      <description>

&lt;p&gt;Модуль &lt;code&gt;i18n&lt;/code&gt; применяется при создании мультиязычных приложений.&lt;/p&gt;

&lt;h3 id=&#34;use&#34;&gt;Подключение&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;let i18n = require(&amp;quot;i18n&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get&#34;&gt;get()&lt;/h3&gt;

&lt;p&gt;Метод &lt;code&gt;i18n.get()&lt;/code&gt; возвращает фразу для необходимой локали.&lt;/p&gt;

&lt;h4 id=&#34;синтаксис&#34;&gt;Синтаксис&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;i18n.get(path[, locale[, params...]]);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;параметры&#34;&gt;Параметры&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;path&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Адрес фразы (string) в формате &lt;code&gt;storeName.param&lt;/code&gt;. Фразы в Store определяются в параметре &lt;a href=&#34;doc/store_reference/#i18n&#34;&gt;i18n&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;locale&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Необходимая локаль (string, опционально). Если параметр опущен, будет использована &lt;a href=&#34;https://getblank.net/doc/settings/#defaultLocale&#34;&gt;системная локаль по-умолчанию&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;params&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Параметры, которыми необходимо заменить плейсхолдеры &lt;code&gt;%s&lt;/code&gt; в искомой строке. Если параметры отсутствуют,
замена плейсхолдеров производиться не будет.&lt;/p&gt;

&lt;h4 id=&#34;возвращаемые-значения&#34;&gt;Возвращаемые значения&lt;/h4&gt;

&lt;p&gt;Искомая строка с заменёнными плейсхолдерами, либо пустая строка, если по переданному адресу ничего не найдено.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>FS</title>
      <link>https://getblank.net/doc/fs/</link>
      <pubDate>Thu, 08 Sep 2016 13:07:30 +0500</pubDate>
      
      <guid>https://getblank.net/doc/fs/</guid>
      <description>

&lt;p&gt;Модуль &lt;code&gt;fs&lt;/code&gt;&amp;nbsp;&amp;amp;mdash модуль &lt;a href=&#34;https://nodejs.org/api/fs.html&#34;&gt;Node FS&lt;/a&gt; с одним дополнительным методом.&lt;/p&gt;

&lt;h3 id=&#34;подключение&#34;&gt;Подключение&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;let fs = require(&amp;quot;fs&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;дополнительные-методы&#34;&gt;Дополнительные методы&lt;/h3&gt;

&lt;h4 id=&#34;readlib&#34;&gt;readLib()&lt;/h4&gt;

&lt;p&gt;Метод &lt;code&gt;fs.readLib()&lt;/code&gt; предназначен для чтения дополнительных пользовательских файлов, расположенных в директории &lt;code&gt;/lib/&lt;/code&gt; проекта.
Синтаксис и механизм работы аналогичен &lt;a href=&#34;https://nodejs.org/api/fs.html#fs_fs_readfile_file_options_callback&#34;&gt;fs.readFile()&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Files</title>
      <link>https://getblank.net/doc/files/</link>
      <pubDate>Thu, 08 Sep 2016 13:07:20 +0500</pubDate>
      
      <guid>https://getblank.net/doc/files/</guid>
      <description>

&lt;p&gt;Модуль &lt;code&gt;files&lt;/code&gt; предназначен для работы со встроенным файловым хранилищем.&lt;/p&gt;

&lt;h3 id=&#34;use&#34;&gt;Подключение&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;let files = require(&amp;quot;files&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get&#34;&gt;get()&lt;/h3&gt;

&lt;p&gt;Метод &lt;code&gt;files.get()&lt;/code&gt; возвращает файл из хранилища.&lt;/p&gt;

&lt;h4 id=&#34;синтаксис&#34;&gt;Синтаксис&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;files.get(storeName, _id[, callback]);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;параметры&#34;&gt;Параметры&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;storeName&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Store в которой хранится файл.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;_id&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Идентификатор файла в Store.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Функция, которая будет выполнена по завершению отправки (опционально).&lt;/p&gt;

&lt;h4 id=&#34;возвращаемые-значения&#34;&gt;Возвращаемые значения&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; в случае переданной функции &lt;code&gt;callback&lt;/code&gt; или &lt;code&gt;Promise&lt;/code&gt;, если функция не передавалась.
Результатом будет содержимое файла в формате &lt;a href=&#34;https://nodejs.org/api/buffer.html&#34;&gt;Node Buffer&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Email</title>
      <link>https://getblank.net/doc/email/</link>
      <pubDate>Thu, 08 Sep 2016 13:06:55 +0500</pubDate>
      
      <guid>https://getblank.net/doc/email/</guid>
      <description>

&lt;p&gt;Модуль &lt;code&gt;email&lt;/code&gt; предназначен для работы с электронной почтой.&lt;/p&gt;

&lt;h3 id=&#34;подключение&#34;&gt;Подключение&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;let email = require(&amp;quot;email&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;send&#34;&gt;send()&lt;/h3&gt;

&lt;p&gt;Метод &lt;code&gt;email.send()&lt;/code&gt; отправляет электронные письма. Под капотом используется &lt;a href=&#34;https://nodemailer.com/&#34;&gt;Nodemailer&lt;/a&gt;.
Параметры подключения к SMTP серверу берутся из Store &lt;code&gt;emailSettings&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;синтаксис&#34;&gt;Синтаксис&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;email.send(message[, callback])
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;параметры&#34;&gt;Параметры&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;message&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Отправляемое сообщение (JavaScript Object).&lt;/p&gt;

&lt;p&gt;Формат сообщения:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;{
    from: &amp;quot;\&amp;quot;Fred Foo �\&amp;quot; &amp;lt;foo@blurdybloop.com&amp;gt;&amp;quot;, // адрес отправителя. В случае, если аргумент отсутствует, будет использоваться адрес из Store &amp;quot;emailSettings&amp;quot;
    to: &amp;quot;bar@blurdybloop.com, baz@blurdybloop.com&amp;quot;, // адреса получателей
    subject: &amp;quot;Hello ✔&amp;quot; // Тема письма
    body: &amp;quot;&amp;quot;, // Текст письма
    attachments: [] // Формат вложений описан здесь – https://github.com/nodemailer/nodemailer#attachments
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Функция, которая будет выполнена по завершению отправки (опционально).&lt;/p&gt;

&lt;h4 id=&#34;возвращаемые-значения&#34;&gt;Возвращаемые значения&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; в случае переданной функции &lt;code&gt;callback&lt;/code&gt; или &lt;code&gt;Promise&lt;/code&gt;, если функция не передавалась.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Serverside JS API</title>
      <link>https://getblank.net/doc/serverjs/</link>
      <pubDate>Wed, 07 Sep 2016 13:10:48 +0500</pubDate>
      
      <guid>https://getblank.net/doc/serverjs/</guid>
      <description>

&lt;p&gt;Серверная часть платформы имеет несколько точек для выполнения собственного произвольного кода:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/lifecycle_events/&#34;&gt;Обработчики событий&lt;/a&gt;, происходящих с объектами в Store;&lt;/li&gt;
&lt;li&gt;Загрузчики &lt;a href=&#34;https://getblank.net/doc/props_reference/#virtual&#34;&gt;виртуальных полей&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/store_reference/#actions&#34;&gt;Действия над объектами&lt;/a&gt;, хранящимися в Store;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/store_reference/#storeactions&#34;&gt;Действия&lt;/a&gt;, которые относятся ко всему Store;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/lifecycle_events/#storelifecycle&#34;&gt;Обработчики события&lt;/a&gt;, жизненного цикла Store;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/httphooks/&#34;&gt;Обработчики HTTP запросов&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/tasks/&#34;&gt;Задачи, требующие периодического запуска&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Во всех обработчиках доступна функция &lt;code&gt;require()&lt;/code&gt;, позволяющая запускать встроенные в node.js и платформу JavaScript модули.
Так же допускается запуск собственных &lt;strong&gt;CommonJS&lt;/strong&gt; модулей, расположенных в директории &lt;code&gt;/lib&lt;/code&gt; проекта.&lt;/p&gt;

&lt;h3 id=&#34;встроенные-модули&#34;&gt;Встроенные модули:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/db/&#34;&gt;$db&lt;/a&gt;&amp;nbsp;&amp;mdash; работа с базой данных;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/email/&#34;&gt;email&lt;/a&gt;&amp;nbsp;&amp;mdash; работа с электронной почтой;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bitinn/node-fetch&#34;&gt;fetch&lt;/a&gt; &lt;a href=&#34;https://getblank.net/doc/serverjs/#embeddedmodules&#34;&gt;*&lt;/a&gt;&amp;nbsp;&amp;mdash; работа с http запросами;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/files/&#34;&gt;files&lt;/a&gt;&amp;nbsp;&amp;mdash; работа со встроенным файловым хранилищем;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/fs/&#34;&gt;fs&lt;/a&gt;&amp;nbsp;&amp;mdash; работа с файловой системой;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://handlebarsjs.com/&#34;&gt;handlebars&lt;/a&gt; &lt;a href=&#34;https://getblank.net/doc/serverjs/#embeddedmodules&#34;&gt;*&lt;/a&gt;&amp;nbsp;&amp;mdash; шаблонизатор;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/i18n/&#34;&gt;i18n&lt;/a&gt;&amp;nbsp;&amp;mdash; интернационализация;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://momentjs.com/&#34;&gt;moment&lt;/a&gt; &lt;a href=&#34;https://getblank.net/doc/serverjs/#embeddedmodules&#34;&gt;*&lt;/a&gt;&amp;nbsp;&amp;mdash; работа с датами;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/queue/&#34;&gt;queue&lt;/a&gt;&amp;nbsp;&amp;mdash; работа с очередями и списками;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/crcn/sift.js&#34;&gt;sift&lt;/a&gt; &lt;a href=&#34;https://getblank.net/doc/serverjs/#embeddedmodules&#34;&gt;*&lt;/a&gt;&amp;nbsp;&amp;mdash; запросы к данным в формате &lt;a href=&#34;https://docs.mongodb.com/manual/tutorial/query-documents/&#34;&gt;MongoDB Query&lt;/a&gt;;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;embeddedmodules&#34;&gt;&lt;/a&gt;
Модули, помеченные знаком &lt;code&gt;*&lt;/code&gt;, разработаны сторонними разработчиками, но входят в поставку Blank.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Facebook</title>
      <link>https://getblank.net/doc/facebook/</link>
      <pubDate>Fri, 19 Aug 2016 21:19:48 +0500</pubDate>
      
      <guid>https://getblank.net/doc/facebook/</guid>
      <description>

&lt;p&gt;Аутентификация пользователей &lt;strong&gt;Blank&lt;/strong&gt; может выполняться через популярные социальные сети.
В данном разделе описан порядок действий, необходимых для обеспечения интеграции &lt;strong&gt;Blank&lt;/strong&gt; и &lt;strong&gt;Facebook&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;создание-приложения-в-facebook&#34;&gt;Создание приложения в Facebook&lt;/h3&gt;

&lt;p&gt;Первым делом, следует создать на &lt;a href=&#34;https://developers.facebook.com/apps&#34;&gt;странице&lt;/a&gt; приложение, которое будет получать данные пользователя.
Выбираем &lt;strong&gt;Website&lt;/strong&gt;:
&lt;img src=&#34;https://getblank.net/img/facebook/step1.png&#34; alt=&#34;step1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Указываем название нового приложения. Именно его увидят пользователи при попытке войти в &lt;strong&gt;Blank&lt;/strong&gt; через Facebook.
&lt;img src=&#34;https://getblank.net/img/facebook/step2.png&#34; alt=&#34;step2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Указываем контактный email и выбираем категорию, например, business.
&lt;img src=&#34;https://getblank.net/img/facebook/step3.png&#34; alt=&#34;step3&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Самый важный шаг&amp;nbsp;&amp;mdash; указываем точный адрес работающего приложения на &lt;strong&gt;Blank&lt;/strong&gt;.
&lt;img src=&#34;https://getblank.net/img/facebook/step4.png&#34; alt=&#34;step4&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Попав на дашборд созданного приложения, копируем &lt;strong&gt;App ID&lt;/strong&gt; и вставляем его параметром &lt;code&gt;facebookClientId&lt;/code&gt; в хранилище &lt;code&gt;_commonSettings&lt;/code&gt;,
&lt;strong&gt;App Secret&lt;/strong&gt; указываем в хранилище &lt;code&gt;_serverSettings&lt;/code&gt; параметром &lt;code&gt;facebookClientSecret&lt;/code&gt;
&lt;img src=&#34;https://getblank.net/img/facebook/step5.png&#34; alt=&#34;step5&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-JSON&#34;&gt;&amp;quot;_serverSettings&amp;quot;: {
    //
    &amp;quot;entries&amp;quot;: {
        //
        &amp;quot;facebookClientSecret&amp;quot;: &amp;quot;95edc3c722be8ec99d1739e8eaabdc4f&amp;quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-JSON&#34;&gt;&amp;quot;_commonSettings&amp;quot;: {
    //
    &amp;quot;entries&amp;quot;: {
        //
        &amp;quot;facebookClientId&amp;quot;: &amp;quot;1063958526991595&amp;quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;После проведения всех настроек, остаётся только сделать доступным приложение всем пользователям
&lt;img src=&#34;https://getblank.net/img/facebook/step6.png&#34; alt=&#34;step6&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Auth</title>
      <link>https://getblank.net/doc/httpauth/</link>
      <pubDate>Wed, 17 Aug 2016 14:54:48 +0500</pubDate>
      
      <guid>https://getblank.net/doc/httpauth/</guid>
      <description>

&lt;p&gt;Помимо полнофункционального WAMP API, &lt;strong&gt;Blank&lt;/strong&gt; имеет в своем арсенале несколько вспомогательных HTTP методов,
в частности, методы, выполняющие функции авторизации и регистрации нового пользователя. Все методы возвращают ответ в формате JSON.&lt;/p&gt;

&lt;h3 id=&#34;авторизация&#34;&gt;Авторизация&lt;/h3&gt;

&lt;p&gt;Авторизация пользователя выполняется путём отправки &lt;strong&gt;POST&lt;/strong&gt; запроса на адрес &lt;code&gt;{_commonSettings.baseUrl}/login&lt;/code&gt;.
Запрос должен содержать &lt;code&gt;form-data&lt;/code&gt; со следующими полями:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    login // логин пользователя (login) или адрес электронной почты (email)
    password // пароль
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;При успешной авторизации, будет возвращен ответ со статусом &lt;code&gt;200&lt;/code&gt;, в теле которого содержится JSON документ с двума полями: &lt;code&gt;key&lt;/code&gt;, содержащее apiKey для последующих запросов и &lt;code&gt;user&lt;/code&gt;, содержащий описание авторизованного пользователя:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-JSON&#34;&gt;    {
        &amp;quot;key&amp;quot;: &amp;quot;05547313-0ceb-41ad-965c-dee3c8992c71&amp;quot;,
        &amp;quot;user&amp;quot;: {...}
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Если любое из полей не указано, вернётся результат со статусом &lt;code&gt;400&lt;/code&gt; и телом &lt;code&gt;invalid arguments&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;В случае, возникновения прочих ошибок, результат может быть возвращен со статусом &lt;code&gt;303&lt;/code&gt; и подробным описанием возникшей ошибки в теле ответа,
либо со статусом &lt;code&gt;500&lt;/code&gt; и телом &lt;code&gt;unknown error&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;регистрация&#34;&gt;Регистрация&lt;/h3&gt;

&lt;p&gt;Регистрация пользователя выполняется путём отправки &lt;strong&gt;POST&lt;/strong&gt; запроса на адрес &lt;code&gt;{_commonSettings.baseUrl}/register&lt;/code&gt;.
Запрос должен содержать &lt;code&gt;form-data&lt;/code&gt; со следующими полями:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    email // адрес электронной почты
    password // пароль
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;При успешной регистрации, будет возвращен пустой ответ со статусом &lt;code&gt;200&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Если любое из полей не указано, вернётся результат со статусом &lt;code&gt;400&lt;/code&gt; и телом &lt;code&gt;invalid arguments&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;В случае, возникновения прочих ошибок, результат может быть возвращен со статусом &lt;code&gt;303&lt;/code&gt; и подробным описанием возникшей ошибки в теле ответа,
либо со статусом &lt;code&gt;500&lt;/code&gt; и телом &lt;code&gt;unknown error&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>REST</title>
      <link>https://getblank.net/doc/httprest/</link>
      <pubDate>Wed, 17 Aug 2016 14:54:48 +0500</pubDate>
      
      <guid>https://getblank.net/doc/httprest/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Blank&lt;/strong&gt; может автоматически активировать HTTP REST API для хранилищ, у которых параметр &lt;code&gt;httpApi&lt;/code&gt; установлен в &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;При этом, так же автоматически будет сформирована документация, доступная по адресу:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    {_commonSettings.baseUrl}/api/v1/
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Сборка конфигурации</title>
      <link>https://getblank.net/doc/build/</link>
      <pubDate>Tue, 09 Aug 2016 00:15:38 +0500</pubDate>
      
      <guid>https://getblank.net/doc/build/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CLI reference</title>
      <link>https://getblank.net/doc/cli/</link>
      <pubDate>Tue, 09 Aug 2016 00:15:34 +0500</pubDate>
      
      <guid>https://getblank.net/doc/cli/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Props reference</title>
      <link>https://getblank.net/doc/props_reference/</link>
      <pubDate>Sat, 06 Aug 2016 22:41:33 +0500</pubDate>
      
      <guid>https://getblank.net/doc/props_reference/</guid>
      <description>

&lt;p&gt;В зависимости от типа, поле может обладать определённым набором свойств из списка:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#accept&#34;&gt;accept&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#access&#34;&gt;access&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#actions&#34;&gt;actions&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#addLabel&#34;&gt;addLabel&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#configurable&#34;&gt;configurable&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#default&#34;&gt;default&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#disablecustominput&#34;&gt;disableCustomInput&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#disabled&#34;&gt;disabled&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#disableorder&#34;&gt;disableOrder&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#disablerefsync&#34;&gt;disableRefSync&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#display&#34;&gt;display&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#displaywidth&#34;&gt;displayWidth&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#extraquery&#34;&gt;extraQuery&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#foreignkey&#34;&gt;foreignKey&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#format&#34;&gt;format&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#formgroup&#34;&gt;formGroup&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#formorder&#34;&gt;formOrder&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#formtab&#34;&gt;formTab&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#hidden&#34;&gt;hidden&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#html&#34;&gt;html&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#label&#34;&gt;label&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#labelclassname&#34;&gt;labelClassName&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#load&#34;&gt;load&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#loadcomponent&#34;&gt;loadComponent&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#mask&#34;&gt;mask&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#max&#34;&gt;max&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#maxlength&#34;&gt;maxLength&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#min&#34;&gt;min&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#minlength&#34;&gt;minLength&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#nosanitize&#34;&gt;noSanitize&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#oppositeprop&#34;&gt;oppositeProp&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#options&#34;&gt;options&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#pattern&#34;&gt;pattern&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#placeholder&#34;&gt;placeholder&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#populateIn&#34;&gt;populateIn&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#props&#34;&gt;props&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#required&#34;&gt;required&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#searchby&#34;&gt;searchBy&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#selectedtemplate&#34;&gt;selectedTemplate&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#sortable&#34;&gt;sortable&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#sortby&#34;&gt;sortBy&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#store&#34;&gt;store&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#style&#34;&gt;style&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#tablecolumns&#34;&gt;tableColumns&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#tablelink&#34;&gt;tableLink&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#tooltip&#34;&gt;tooltip&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#type&#34;&gt;type&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#utc&#34;&gt;utc&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#widgetid&#34;&gt;widgetId&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#widgets&#34;&gt;widgets&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getblank.net/doc/props_reference/#сlassname&#34;&gt;сlassName&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;accept&#34;&gt;accept&lt;/h3&gt;

&lt;p&gt;Только для &lt;code&gt;type:file&lt;/code&gt;. Позволяет задать маску принимаемых для загрузки файлов.
В настоящее время не реализовано.&lt;/p&gt;

&lt;h3 id=&#34;access&#34;&gt;access&lt;/h3&gt;

&lt;p&gt;Массив правил, определяющих доступ к полю. Синтаксис аналогичен свойству &lt;a href=&#34;https://getblank.net/doc/store_reference/#access&#34;&gt;access&lt;/a&gt; Store.&lt;/p&gt;

&lt;h3 id=&#34;actions&#34;&gt;actions&lt;/h3&gt;

&lt;p&gt;Только для &lt;code&gt;type:action&lt;/code&gt;. Массив объектов с описанием Actions, определённых в текущем Store.
Используется для размещения кнопок запуска Actions на форме в интерфейсе клиента.
Может переопределять некоторые свойства конкретных отображаемых Action.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;actions: [
     // Здесь мы указываем, что нужно поместить кнопку вызова Action copy
    { _id: &amp;quot;copy&amp;quot; },

    // Здесь мы дополнительно переопределяем свойство label
    { _id: &amp;quot;move&amp;quot;, label: &amp;quot;Перенести&amp;quot; },
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;addlabel&#34;&gt;addLabel&lt;/h3&gt;

&lt;p&gt;Только для &lt;code&gt;type:objectList&lt;/code&gt;. Строка текстом для кнопки добавления нового элемента в список.
При рендеринге, строка обрабатывается через handlebars.&lt;/p&gt;

&lt;h3 id=&#34;configurable&#34;&gt;configurable&lt;/h3&gt;

&lt;p&gt;Внутреннее свойство для Store по-умолчанию (bool). Определяет возможность переопределения свойств поля в пользовательской конфигурации.&lt;/p&gt;

&lt;h3 id=&#34;default&#34;&gt;default&lt;/h3&gt;

&lt;p&gt;Определяет значение поля по-умолчению. Будет установлено при создании объекта, в случае, если значение не определено в создаваемом объекте.&lt;/p&gt;

&lt;h3 id=&#34;disablecustominput&#34;&gt;disableCustomInput&lt;/h3&gt;

&lt;h3 id=&#34;disabled&#34;&gt;disabled&lt;/h3&gt;

&lt;p&gt;Строка, описывающая условие недоступности редактирования поля текущего элемента в пользовательском интерфейсе.
В условии доступны объекты &lt;code&gt;$item&lt;/code&gt; (текущий объект) и &lt;code&gt;$user&lt;/code&gt; (пользователь, работающий с объектом).&lt;/p&gt;

&lt;h3 id=&#34;disableorder&#34;&gt;disableOrder&lt;/h3&gt;

&lt;p&gt;Флаг, определяющий запрет сортировки по полю при типе отображения Store &lt;code&gt;table&lt;/code&gt; (bool).&lt;/p&gt;

&lt;h3 id=&#34;disablerefsync&#34;&gt;disableRefSync&lt;/h3&gt;

&lt;p&gt;Флаг, указывающий, что не требуется проводить обновление связи данного поля.
Подробнее о механизме каскадного обновления связей читайте в разделе &lt;a href=&#34;https://getblank.net/doc/ref_sync/&#34;&gt;References sync&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;display&#34;&gt;display&lt;/h3&gt;

&lt;p&gt;Тип отображения поля в пользовательском интерфейсе (string). Возможные варианты:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;autocomplete&lt;/code&gt;&amp;nbsp;&amp;mdash; только для &lt;code&gt;type:string&lt;/code&gt;. Текстовое поле ввода с автодополнением.
Варианты определяются в свойстве &lt;a href=&#34;https://getblank.net/doc/props_reference/#options&#34;&gt;options&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;checkbox&lt;/code&gt;&amp;nbsp;&amp;mdash; только для &lt;code&gt;type:bool&lt;/code&gt;. Поле с флажком в виде галочки;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;checkList&lt;/code&gt;&amp;nbsp;&amp;mdash; поле выбора нескольких вариантов, определённых в свойстве &lt;a href=&#34;https://getblank.net/doc/props_reference/#options&#34;&gt;options&lt;/a&gt;. Отображается в виде списка флажков;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;code&lt;/code&gt;&amp;nbsp;&amp;mdash; отображение в виде нередактируемого текста с сохранением исходного форматирования и моноширинным шрифтом;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;codeEditor&lt;/code&gt;&amp;nbsp;&amp;mdash; только для &lt;code&gt;type:string&lt;/code&gt;. Редактор кода;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;colorPicker&lt;/code&gt;&amp;nbsp;&amp;mdash; только для &lt;code&gt;type:string&lt;/code&gt; поле выбора цвета из описанных в &lt;a href=&#34;https://getblank.net/doc/props_reference/#options&#34;&gt;options&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;commentsEditor&lt;/code&gt;&amp;nbsp;&amp;mdash; только для &lt;code&gt;type:comments&lt;/code&gt;. Поле для ввода комментариев;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;dataTable&lt;/code&gt;&amp;nbsp;&amp;mdash; не реализовано;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;datePicker&lt;/code&gt;&amp;nbsp;&amp;mdash; только для &lt;code&gt;type:date&lt;/code&gt;. Поле ввода даты;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;dateTimePicker&lt;/code&gt;&amp;nbsp;&amp;mdash; только для &lt;code&gt;type:date&lt;/code&gt;. Поле ввода даты и времени (не реализовано);&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;filePicker&lt;/code&gt;&amp;nbsp;&amp;mdash; только для &lt;code&gt;type:file&lt;/code&gt;. Поле выбора и закачки файлов;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;floatInput&lt;/code&gt;&amp;nbsp;&amp;mdash; только для &lt;code&gt;type:int&lt;/code&gt; и &lt;code&gt;type:float&lt;/code&gt;. Текстовое поле ввода с возможность ввода только числовых вещественных значений;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;headerInput&lt;/code&gt;&amp;nbsp;&amp;mdash; ;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;html&lt;/code&gt;&amp;nbsp;&amp;mdash; отображение поля по переданному в свойстве &lt;a href=&#34;https://getblank.net/doc/props_reference/#html&#34;&gt;html&lt;/a&gt; шаблону;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;link&lt;/code&gt;&amp;nbsp;&amp;mdash; отображение ссылки;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;masked&lt;/code&gt;&amp;nbsp;&amp;mdash; только для &lt;code&gt;type:string&lt;/code&gt;. Вввод данных по маске, определённой в свойстве &lt;a href=&#34;https://getblank.net/doc/props_reference/#mask&#34;&gt;mask&lt;/a&gt; ;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;none&lt;/code&gt;&amp;nbsp;&amp;mdash; запрет отображения поля в интерфейсе;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;numberInput&lt;/code&gt;&amp;nbsp;&amp;mdash;  только для &lt;code&gt;type:int&lt;/code&gt; и &lt;code&gt;type:float&lt;/code&gt;. Текстовое поле ввода с возможность ввода только числовых целочисленных значений;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;password&lt;/code&gt;&amp;nbsp;&amp;mdash; только для &lt;code&gt;type:password&lt;/code&gt; и &lt;code&gt;type:string&lt;/code&gt;. Поле ввода текста, при этом вводимые символы скрыты за звездочками;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;react&lt;/code&gt;&amp;nbsp;&amp;mdash; отображение поля с помощью кастомного компонента ReactJS, определённого в свойстве &lt;a href=&#34;https://getblank.net/doc/props_reference/#loadcomponent&#34;&gt;loadComponent&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;searchBox&lt;/code&gt;&amp;nbsp;&amp;mdash; только для &lt;code&gt;type:ref&lt;/code&gt; и &lt;code&gt;type:refList&lt;/code&gt;. Поле поиска и ввода объектов из Store,
определённой в свойстве &lt;a href=&#34;https://getblank.net/doc/props_reference/#store&#34;&gt;store&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;select&lt;/code&gt;&amp;nbsp;&amp;mdash; поле выбора одного из нескольких вариантов, определённых в свойстве &lt;a href=&#34;https://getblank.net/doc/props_reference/#options&#34;&gt;options&lt;/a&gt;;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;text&lt;/code&gt;&amp;nbsp;&amp;mdash; отображение в виде нередактируемого текста;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;textArea&lt;/code&gt;&amp;nbsp;&amp;mdash;  только для &lt;code&gt;type:string&lt;/code&gt;. Текстовое поле ввода с возможностью ввода нескольких строк текста;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;textInput&lt;/code&gt;&amp;nbsp;&amp;mdash;  только для &lt;code&gt;type:string&lt;/code&gt;. Текстовое поле ввода;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;timePicker&lt;/code&gt;&amp;nbsp;&amp;mdash; только для &lt;code&gt;type:date&lt;/code&gt;. Поле ввода времени (не реализовано).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;displaywidth&#34;&gt;displayWidth&lt;/h3&gt;

&lt;h3 id=&#34;extraquery&#34;&gt;extraQuery&lt;/h3&gt;

&lt;h3 id=&#34;foreignkey&#34;&gt;foreignKey&lt;/h3&gt;

&lt;p&gt;Только для &lt;code&gt;type:virtualRefList&lt;/code&gt;. Определяет поле с &lt;code&gt;type:ref&lt;/code&gt; в Store из свойства &lt;a href=&#34;https://getblank.net/doc/props_reference/#store&#34;&gt;store&lt;/a&gt;, содержащее ссылку на текущее Store
по которому будет делаться выборка данных для отображения.&lt;/p&gt;

&lt;h3 id=&#34;format&#34;&gt;format&lt;/h3&gt;

&lt;p&gt;Только для &lt;code&gt;type:date&lt;/code&gt;. Формат отображения даты в пользовательском интерфейсе в соответствии с синтаксисом &lt;a href=&#34;http://momentjs.com/&#34;&gt;Moment.js&lt;/a&gt; (строка).&lt;/p&gt;

&lt;h3 id=&#34;formgroup&#34;&gt;formGroup&lt;/h3&gt;

&lt;p&gt;Идентификатор группы для отображения поля в пользовательском интерфейсе (строка). Группы определяются в &lt;a href=&#34;https://getblank.net/doc/store_reference/#formgroupsorder&#34;&gt;Store.formGroupsOrder&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;formorder&#34;&gt;formOrder&lt;/h3&gt;

&lt;p&gt;Число, определяющее место отображения поля на форме в пользовательском интерфейсе (int). Может быть отрицательным.&lt;/p&gt;

&lt;h3 id=&#34;formtab&#34;&gt;formTab&lt;/h3&gt;

&lt;p&gt;Идентификатор табы для отображения поля в пользовательском интерфейсе (строка). Табы определяются в &lt;a href=&#34;https://getblank.net/doc/store_reference/#formtabs&#34;&gt;Store.formTabs&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;hidden&#34;&gt;hidden&lt;/h3&gt;

&lt;p&gt;Условие, при выполнении которого поле будет скрыто с формы в пользовательском интерфейсе (строка).
В условии доступны объекты &lt;code&gt;$item&lt;/code&gt; (текущий объект) и &lt;code&gt;$user&lt;/code&gt; (пользователь, работающий с объектом).&lt;/p&gt;

&lt;h3 id=&#34;html&#34;&gt;html&lt;/h3&gt;

&lt;p&gt;Только для &lt;code&gt;display:html&lt;/code&gt;. Шаблон для отображения поля в пользовательском интерфейсе (строка). При рендеринге, обрабатывается через handlebars.&lt;/p&gt;

&lt;h3 id=&#34;label&#34;&gt;label&lt;/h3&gt;

&lt;p&gt;Заголовок поля на форме в пользовательском интерфейсе. При рендеринге, обрабатывается через handlebars.&lt;/p&gt;

&lt;h3 id=&#34;labelclassname&#34;&gt;labelClassName&lt;/h3&gt;

&lt;p&gt;Определяет дополнительный CSS класс для заголовка поля в пользовательском интерфейсе.&lt;/p&gt;

&lt;h3 id=&#34;load&#34;&gt;load&lt;/h3&gt;

&lt;p&gt;Только для &lt;code&gt;type:virtual&lt;/code&gt; и &lt;code&gt;type:virtual/client&lt;/code&gt;. Функция загрузки виртуального поля.
В функции доступны объекты &lt;code&gt;$item&lt;/code&gt; (текущий объект) и &lt;code&gt;$user&lt;/code&gt; (пользователь, работающий с объектом).&lt;/p&gt;

&lt;h3 id=&#34;loadcomponent&#34;&gt;loadComponent&lt;/h3&gt;

&lt;p&gt;Только для &lt;code&gt;display:react&lt;/code&gt;. Код компонента React.JS для отображения поля в пользовательском интерфейсе.&lt;/p&gt;

&lt;h3 id=&#34;mask&#34;&gt;mask&lt;/h3&gt;

&lt;p&gt;Только для &lt;code&gt;type:string&lt;/code&gt; и &lt;code&gt;display:masked&lt;/code&gt;. Определение маски ввода строки (строка или объект).&lt;/p&gt;

&lt;h3 id=&#34;max&#34;&gt;max&lt;/h3&gt;

&lt;p&gt;Только для  &lt;code&gt;type:int&lt;/code&gt; и &lt;code&gt;type:float&lt;/code&gt;. Минимальное значение поля (число).&lt;/p&gt;

&lt;h3 id=&#34;maxlength&#34;&gt;maxLength&lt;/h3&gt;

&lt;p&gt;Только для &lt;code&gt;type:string&lt;/code&gt;. Минимальная длина строки (число).&lt;/p&gt;

&lt;h3 id=&#34;min&#34;&gt;min&lt;/h3&gt;

&lt;p&gt;Только для  &lt;code&gt;type:int&lt;/code&gt; и &lt;code&gt;type:float&lt;/code&gt;. Максимальное значение поля (число).&lt;/p&gt;

&lt;h3 id=&#34;minlength&#34;&gt;minLength&lt;/h3&gt;

&lt;p&gt;Только для &lt;code&gt;type:string&lt;/code&gt;. Максимальная длина строки (число).&lt;/p&gt;

&lt;h3 id=&#34;nosanitize&#34;&gt;noSanitize&lt;/h3&gt;

&lt;p&gt;Флаг указывающий на то, что html в пропе является безопасным (bool).&lt;/p&gt;

&lt;h3 id=&#34;oppositeprop&#34;&gt;oppositeProp&lt;/h3&gt;

&lt;p&gt;Только для &lt;code&gt;type:ref&lt;/code&gt;. Название поля в Store, определённой свойством &lt;a href=&#34;https://getblank.net/doc/props_reference/#store&#34;&gt;store&lt;/a&gt; (строка).
Требуется для работы механизма каскадного обновления связей.
Подробнее о механизме каскадного обновления связей читайте в разделе &lt;a href=&#34;https://getblank.net/doc/ref_sync/&#34;&gt;References sync&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;options&#34;&gt;options&lt;/h3&gt;

&lt;p&gt;Только для &lt;code&gt;display:select&lt;/code&gt;, &lt;code&gt;display:checkList&lt;/code&gt;, &lt;code&gt;display:autocomplete&lt;/code&gt; и &lt;code&gt;display:colorPicker&lt;/code&gt;.
Определяет возможные варианты значений поля (массив значений или объектов). Для опредления в пользовательском интерфейсе
отображения названий значений отличных от самих значений, следует передавать массив объектов следующего вида:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;{
    value: 1, // значение соответствующего типа
    label: &amp;quot;Номер один&amp;quot;, // название значения, отображаемое в пользовательском интерфейсе
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;pattern&#34;&gt;pattern&lt;/h3&gt;

&lt;p&gt;Регулярное выражение для проверки вводимого значения (строка или объект). Имеется возможность переопределения
текста ошибки ввода значения поля в пользовательском интерфейсе. Для этого следует использовать объект вида:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-JavaScript&#34;&gt;{
    expression: &amp;quot;^\d+$&amp;quot;, // регулярное выражение в виде строки.
    message: &amp;quot;Нужно ввести хотя бы одну цифру&amp;quot;, // Текст ошибки для отображения в пользовательском интерфейсе.
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;placeholder&#34;&gt;placeholder&lt;/h3&gt;

&lt;p&gt;Для полей ввода данных в пользовательском интерфейсе. Определяет текстовую подсказку, отображаемую в поле ввода
при отсутствии значения.&lt;/p&gt;

&lt;h3 id=&#34;populatein&#34;&gt;populateIn&lt;/h3&gt;

&lt;p&gt;Только для &lt;code&gt;type:ref&lt;/code&gt;. Обозначает поле, в которое будет передан соответствующий объект из Store
определённом в свойстве &lt;a href=&#34;https://getblank.net/doc/props_reference/#store&#34;&gt;store&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;props&#34;&gt;props&lt;/h3&gt;

&lt;p&gt;Только для &lt;code&gt;type:object&lt;/code&gt; и &lt;code&gt;type:objectList&lt;/code&gt;. Определяет свойства вложенных объектов.&lt;/p&gt;

&lt;h3 id=&#34;required&#34;&gt;required&lt;/h3&gt;

&lt;p&gt;Флаг обязательного поля (bool). Если &lt;code&gt;true&lt;/code&gt;, то при сохранении объекта с неустановленным значением поля будет возвращена ошибка.
В пользовательском интерфейсе при этом будет заблокирована кнопка &lt;strong&gt;Сохранить&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;searchby&#34;&gt;searchBy&lt;/h3&gt;

&lt;h3 id=&#34;selectedtemplate&#34;&gt;selectedTemplate&lt;/h3&gt;

&lt;h3 id=&#34;sortable&#34;&gt;sortable&lt;/h3&gt;

&lt;h3 id=&#34;sortby&#34;&gt;sortBy&lt;/h3&gt;

&lt;h3 id=&#34;store&#34;&gt;store&lt;/h3&gt;

&lt;h3 id=&#34;style&#34;&gt;style&lt;/h3&gt;

&lt;h3 id=&#34;tablecolumns&#34;&gt;tableColumns&lt;/h3&gt;

&lt;h3 id=&#34;tablelink&#34;&gt;tableLink&lt;/h3&gt;

&lt;h3 id=&#34;tooltip&#34;&gt;tooltip&lt;/h3&gt;

&lt;h3 id=&#34;type&#34;&gt;Type&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;type: &amp;quot;string|int|float|bool|date|file|ref|refList|virtual&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Тип данных свойства.&lt;/p&gt;

&lt;h4 id=&#34;bool&#34;&gt;bool&lt;/h4&gt;

&lt;p&gt;Значения типа &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;date&#34;&gt;date&lt;/h4&gt;

&lt;p&gt;Соответствует JavaScript Date. При сериализации в JSON преобразуются в строку в формате &lt;a href=&#34;https://en.wikipedia.org/wiki/ISO_8601&#34;&gt;ISO&amp;nbsp;8601&lt;/a&gt;,
например – &lt;code&gt;&amp;quot;2016-08-11T06:36:47.134Z&amp;quot;&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;file&#34;&gt;file&lt;/h4&gt;

&lt;p&gt;Файловое хранилище в Blank работает отдельно, в MongoDB сохраняются только идентификаторы файлов.&lt;/p&gt;

&lt;h4 id=&#34;float&#34;&gt;float&lt;/h4&gt;

&lt;p&gt;Вещественный тип.&lt;/p&gt;

&lt;h4 id=&#34;int&#34;&gt;int&lt;/h4&gt;

&lt;p&gt;Целочисленный тип.&lt;/p&gt;

&lt;h4 id=&#34;object&#34;&gt;object&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;type: &amp;quot;object&amp;quot;,
props: {
    //Свойства вложенного объекта
},
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Тип для создания вложенной структуры данных. Поддерживается только один уровень вложенности объектов.&lt;/p&gt;

&lt;h4 id=&#34;objectlist&#34;&gt;objectList&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;type: &amp;quot;objectList&amp;quot;,
props: {
    //Свойства вложенных объектов
},
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Тип для создания массивов вложенных объектов данных. Поддерживается только один уровень вложенности.&lt;/p&gt;

&lt;h4 id=&#34;ref&#34;&gt;ref&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;type: &amp;quot;ref&amp;quot;,
store: &amp;quot;refStoreName&amp;quot;,
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ссылка на другой объект. Подходит для связей 1-1, N-1. Значением является строка с идентификатором объекта.&lt;/p&gt;

&lt;p&gt;В Blank работает каскадное обновление связей, подробнее об этом механизме читайте в разделе &lt;a href=&#34;https://getblank.net/doc/ref_sync/&#34;&gt;References sync&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;reflist&#34;&gt;refList&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;type: &amp;quot;refList&amp;quot;,
store: &amp;quot;refStoreName&amp;quot;,
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Массив ссылок на другие объекты, используется для создания связей 1-N, M-N. Значение записывается в виде
массива строковых идентификаторов:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;[&amp;quot;e5ba2446-81e1-4b2d-b901-ca9eabe9817e&amp;quot;, &amp;quot;533ddfc5-5d3f-41f7-8557-872d4bfd2735&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;В Blank работает каскадное обновление связей, подробнее об этом механизме читайте в разделе &lt;a href=&#34;https://getblank.net/doc/ref_sync/&#34;&gt;References sync&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;string&#34;&gt;string&lt;/h4&gt;

&lt;p&gt;Строка.&lt;/p&gt;

&lt;h4 id=&#34;virtual&#34;&gt;virtual&lt;/h4&gt;

&lt;p&gt;Виртуальные свойства, данные этих свойств являются вычисляемыми и не сохраняются в БД. Для вычисления значения
используется функция load, получающая на вход текущий объект и пользователя, запрашивающего данные:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;type: &amp;quot;virtual&amp;quot;,
load: function ($item, $user) {
    return $item.prop1 + $item.prop2;
},
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;utc&#34;&gt;utc&lt;/h3&gt;

&lt;h3 id=&#34;widgetid&#34;&gt;widgetId&lt;/h3&gt;

&lt;h3 id=&#34;widgets&#34;&gt;widgets&lt;/h3&gt;

&lt;h3 id=&#34;сlassname&#34;&gt;сlassName&lt;/h3&gt;
</description>
    </item>
    
  </channel>
</rss>