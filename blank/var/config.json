{"_commonSettings":{"type":"map","access":[{"role":"guest","permissions":"crud","condition":null},{"role":"all","permissions":"crud","condition":null}],"groupAccess":"","ownerAccess":"","i18n":{"en":{"comments":{"label":"Comments","placeholder":"Write..."},"common":{"actionError":"Something went wrong: ","apply":"Apply","cancel":"Cancel","datePattern":"DD.MM.YYYY","email":"E-mail address","language":"Language","loadingData":"loading data","month":"Month","password":"Password","recordsOnPage":"Records on page: ","saved":"changes saved","today":"Today","userName":"Login","week":"Week","yesterday":"Yesterday"},"errors":{"EMAIL_NOT_FOUND":"E-mail address not found","INVALID_OLD_PASSWORD":"Invalid old password","PASSWORD_NOT_MATCHED":"Invalid password","action":"Sorry, but we unable to process your request","common":"Something went wrong...","delete":"Delete error","emailInvalid":"Invalid e-mail","emailUsed":"E-mail in use","invalidPattern":"Incorrect format","requiredField":"Required field","save":"Error while saving changes"},"filters":{"all":"All","clear":"reset","enterSearchText":"Search","search":"Search","title":"Filter"},"form":{"addToObjectList":"Add","all":"All","cancel":"Cancel","delete":"Delete","deleted":"Item deleted","dropFile":"or drop here","e404":"There is no such object","e404prompt":"Please create one or select from list","emptyPreview":"Please select element from list...","filterNotMatch":"Selected object does not match filter conditions","moved":"Item moved to another folder","newObject":"New object","notSaved":"Not saved – ","openMoved":"Show","pickFile":"Choose file","save":"Save","selected":"Selected"},"install":{"accept":"Accept","createRoot":"Create root account","hello":"Hi, let's start now","license":"License agreement","next":"Next"},"lists":{"empty":"Looks like there is nothing here...","new":"Creating item","notFound":"Nothing found"},"notifications":{"empty":"No notifications","previously":"Previously"},"profile":{"changeLogin":"Login change","link":"Profile","newLogin":"New login","passwordSaved":"Password did change","saved":"Profile info did save","title":"Profile"},"resetPassword":{"action":"change","newPassword":"New password","oldPassword":"Current password","successEmailSubject":"Password was changed","title":"Password change"},"sendResetLink":{"action":"Send link","emailSubject":"Password restore","link":"I forgot password","title":"Password restore"},"signIn":{"action":"Sign in","error":"Login or password incorrect","restoreLinkSent":"Email with recent link sent. If you provide correct address, you will receive it within 10 minutes","title":"Sign in"},"signOut":{"action":"Sign out"},"signUp":{"action":"Register","activationEmailSubject":"Account activation","eulaCheck":"I accept the terms in the license agreement","invalidEmail":"Invalid email","loginInUse":"E-mail already in use","registrationSuccessEmailSubject":"Congratulations with registration","subscribeCheck":"I want to receive information e-mails","success":"Successful registration. You can sign in now using your e-mail and password.","successNeedActivation":"An activation email has been sent to the email address provided.","title":"Registration"}},"ru":{"comments":{"label":"Комментарии","placeholder":"Написать..."},"common":{"actionError":"Что-то пошло не так: ","apply":"Применить","cancel":"Отменить","datePattern":"ДД.ММ.ГГГГ","email":"Адрес электронной почты","language":"Язык","loadingData":"загрузка данных","month":"Месяц","password":"Пароль","recordsOnPage":"Строк на странице: ","saved":"изменения сохранены","today":"Сегодня","userName":"Имя пользователя","week":"Неделя","yesterday":"Вчера"},"errors":{"EMAIL_NOT_FOUND":"E-mail адрес не найден","INVALID_OLD_PASSWORD":"Старый пароль не правильный","PASSWORD_NOT_MATCHED":"Неверный пароль","action":"Ошибка","common":"Ой, что-то пошло не так...","delete":"Ошибка при удалении","emailInvalid":"Некорректный e-mail","emailUsed":"E-mail занят","invalidPattern":"Неверный формат","requiredField":"Обязательное поле","save":"Ошибка при сохранении изменений"},"filters":{"all":"Все","clear":"Сбросить","enterSearchText":"Поиск","search":"Поиск","title":"Фильтр"},"form":{"addToObjectList":"Добавить","all":"Все","cancel":"Отменить","delete":"Удалить","deleted":"Объект удален","dropFile":"или перетащите сюда","e404":"Ой, а такого объекта у нас нет...","e404prompt":"Можно выбрать что-нибудь другое из списка или добавить новую запись","emptyPreview":"Выберите объект для отображения...","filterNotMatch":"Выбранный объект не попадает под условия фильтра","moved":"Объект перемещен в другую папку","newObject":"Новый объект","notSaved":"Не сохранено – ","openMoved":"Показать","pickFile":"Выберите файл","save":"Сохранить","selected":"Выбранные"},"install":{"accept":"Принять","createRoot":"Создание аккаунта администратора","hello":"Привет. Скоро начнем.","license":"Лицензионное соглашение","next":"Далее"},"lists":{"empty":"Похоже, тут ничего нет...","new":"Добавление записи","notFound":"Ничего не найдено"},"notifications":{"empty":"Уведомлений нет","previously":"Ранее"},"profile":{"changeLogin":"Изменение имени пользователя","link":"Профиль","newLogin":"Новое имя пользователя","passwordSaved":"Пароль изменен","saved":"Данные профиля сохранены","title":"Профиль"},"resetPassword":{"action":"Сменить пароль","newPassword":"Новый пароль","oldPassword":"Текущий пароль","successEmailSubject":"Пароль успешно изменён","title":"Изменение пароля"},"sendResetLink":{"action":"Отправить ссылку","emailSubject":"Восстановление пароля","link":"Я забыл пароль","title":"Восстановление пароля"},"signIn":{"action":"Войти","error":"Неверное имя пользователя или пароль","restoreLinkSent":"Письмо со ссылкой для сброса пароля отправлено. Если был указан корректный адрес, вы получите письмо в течение 10 минут","title":"Вход"},"signOut":{"action":"Выйти"},"signUp":{"action":"Зарегистрироваться","activationEmailSubject":"Активация аккаунта","eulaCheck":"Я принимаю условия лицензионного соглашения","invalidEmail":"Неправильный адрес email","loginInUse":"E-mail занят","registrationSuccessEmailSubject":"Поздравляем с регистрацией","subscribeCheck":"Я согласен получать рассылку","success":"Регистрация прошла успешно. Вы можете войти, используя свои e-mail и пароль.","successNeedActivation":"На указанный вами адрес отправлено письмо для активации аккаунта.","title":"Регистрация"}}},"props":null,"filters":null,"objectLifeCycle":{},"storeLifeCycle":{},"formTabs":null,"entries":{"defaultLocale":"en","lessVars":{},"links":[{"href":"http://mysite.com/example","rel":"canonical"}],"locales":["en","ru"],"meta":[{"content":"Application description","name":"description"},{"content":"Application author","name":"author"}],"resetPasswordDisabled":false,"resetPasswordProps":{"password":{"display":"password","formOrder":2,"label":"{{$i18n.$settings.resetPassword.newPassword}}","required":true,"type":"string"}},"resetPasswordRequestProps":{"email":{"display":"textInput","label":"{{$i18n.$settings.common.email}}","pattern":{"expression":"^\\S+@\\S+\\.\\S+$","message":"{{$i18n.$settings.signUp.invalidEmail}}"},"required":true,"type":"string"}},"signInProps":{"login":{"display":"textInput","formOrder":1,"label":"{{$i18n.$settings.common.email}}","required":true,"type":"string"},"password":{"display":"password","formOrder":2,"label":"{{$i18n.$settings.common.password}}","required":true,"type":"string"}},"signUpDisabled":false,"signUpProps":{"email":{"display":"newUsernameInput","formOrder":1,"label":"{{$i18n.$settings.common.email}}","pattern":{"expression":"^\\S+@\\S+\\.\\S+$","message":"{{$i18n.$settings.signUp.invalidEmail}}"},"required":true,"type":"string"},"eula":{"display":"checkbox","formOrder":4,"label":"{{{$i18n.$settings.signUp.eulaCheck}}}","required":true,"type":"bool"},"password":{"display":"password","formOrder":2,"label":"{{$i18n.$settings.common.password}}","required":true,"type":"string"}},"title":"Default title","userActivation":false},"navOrder":0,"display":"","html":"","store":""},"_default":{"type":"directory","groupAccess":"","ownerAccess":"","i18n":null,"props":{"_deleted":{"name":"","type":"bool","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none"},"_id":{"name":"","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none","readOnly":true,"required":true},"_ownerId":{"name":"","type":"ref","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none","required":true,"store":"users","configurable":true},"createdAt":{"name":"","type":"date","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none","configurable":true},"createdBy":{"name":"","type":"ref","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none","store":"users"},"deletedAt":{"name":"","type":"date","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none"},"deletedBy":{"name":"","type":"ref","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none","store":"users"},"name":{"name":"","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"headerInput","configurable":true},"updatedAt":{"name":"","type":"date","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none"},"updatedBy":{"name":"","type":"ref","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none","store":"users"}},"filters":{"_default":{"display":"","multi":false,"query":{"name":{"$options":"i","$regex":"$value"}}}},"objectLifeCycle":{},"storeLifeCycle":{},"formTabs":null,"navOrder":0,"display":"","html":"","store":""},"_defaultNotifications":{"type":"notification","groupAccess":"","ownerAccess":"","i18n":null,"props":{"_id":{"name":"","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none","readOnly":true},"details":{"name":"","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none"},"event":{"name":"","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none"},"level":{"name":"","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none"},"message":{"name":"","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none"},"relatedObjects":{"name":"","type":"objectList","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none","props":{"_id":{"name":"","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none"},"mode":{"name":"","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none"},"name":{"name":"","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none"},"store":{"name":"","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none"}}},"ttl":{"name":"","type":"int","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none","min":0}},"filters":null,"objectLifeCycle":{},"storeLifeCycle":{},"formTabs":null,"navOrder":0,"display":"","html":"","store":""},"_defaultProcess":{"type":"process","groupAccess":"","ownerAccess":"","i18n":null,"props":{"_result":{"name":"","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none","configurable":true},"_state":{"name":"","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none","configurable":true}},"filters":{"_state":{"display":"","conditions":[{"property":"_state","value":null,"operator":"="}],"multi":false}},"objectLifeCycle":{},"storeLifeCycle":{},"formTabs":null,"navOrder":0,"display":"","html":"","store":""},"_defaultSingle":{"type":"single","groupAccess":"","ownerAccess":"","i18n":null,"props":{"name":{"name":"","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none"}},"filters":null,"objectLifeCycle":{},"storeLifeCycle":{},"formTabs":null,"navOrder":0,"display":"","html":"","store":""},"_nav":{"type":"map","groupAccess":"","ownerAccess":"","i18n":null,"props":null,"filters":null,"objectLifeCycle":{},"storeLifeCycle":{},"formTabs":null,"entries":{"config":{"label":"Administration"}},"navOrder":0,"display":"","html":"","store":""},"_roles":{"type":"map","groupAccess":"","ownerAccess":"","i18n":null,"props":null,"filters":null,"objectLifeCycle":{},"storeLifeCycle":{},"formTabs":null,"entries":{"all":{"display":"none","label":"all"},"root":{"display":"none","label":"root"}},"navOrder":0,"display":"","html":"","store":""},"_serverSettings":{"type":"map","groupAccess":"","ownerAccess":"","i18n":null,"props":null,"filters":null,"objectLifeCycle":{},"storeLifeCycle":{},"formTabs":null,"storeActions":[{"_id":"restdoc","disableItemReadyCheck":false,"hideInHeader":false,"icon":"","label":"","multi":false,"script":"\n                    let fs = require(\"fs\");\n                    let hs = require(\"handlebars\");\n                    hs.registerHelper(\"toJSON\", function (object) {\n                        return new hs.SafeString(JSON.stringify(object));\n                    });\n                    let src, partial;\n                    return fs.readLib(\"templates/rest-api-template.html\").then(res =\u003e {\n                        src = res;\n                        return fs.readLib(\"templates/rest-api-list-partial.html\");\n                    }).then(res =\u003e {\n                        partial = res;\n                        let template = hs.compile(src);\n                        hs.registerPartial(\"propsList\", partial);\n                        return template({ config: $data });\n                    });\n                ","groupAccess":"","ownerAccess":"","props":null}],"entries":{"passwordResetTokenExpiration":"0:10","registerTokenExpiration":"0:60"},"navOrder":0,"display":"","html":"","store":""},"dba":{"type":"single","access":[{"role":"root","permissions":"crux","condition":null}],"groupAccess":"","ownerAccess":"","navGroup":"config","i18n":{"en":{"download":"Download DB","generateKey":"Generate API Key","storeLabel":"DB administration"},"ru":{"download":"Скачать базу","generateKey":"Сгенерировать API ключ","storeLabel":"Администрирование БД"}},"props":{"key":{"name":"","label":"API Key","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"code","hidden":"!$item.key"}},"filters":{},"objectLifeCycle":{},"storeLifeCycle":{},"formTabs":null,"actions":[{"_id":"download","disableItemReadyCheck":false,"hideInHeader":false,"icon":"","label":"{{$i18n.download}}","multi":false,"script":"\n                     var tmpFile = $db.newId();\n                     $db.backupSync(tmpFile);\n                     $response.file(tmpFile, new Date().toISOString() + \".db\");\n                     require(\"fs\").unlink(tmpFile, function(e){\n                         if (e) {\n                             console.error(\"Can't remove file\", tmpFile, e);\n                         }\n                     });\n                ","type":"http","groupAccess":"","ownerAccess":"","props":null},{"_id":"setKey","disableItemReadyCheck":false,"hideInHeader":false,"icon":"","label":"{{$i18n.generateKey}}","multi":false,"script":"\n                    return $db.setSync({\"_id\": \"dba\", \"key\": $db.newId()}, \"dba\");\n                ","groupAccess":"","ownerAccess":"","props":null}],"navOrder":110,"display":"none","html":"","label":"{{$i18n.storeLabel}}","httpHooks":[{"uri":"backup/:key","method":"GET","script":"\n                    var key = $request.params[\"key\"];\n                    if (!key || key === \"\") {\n                        return $response.html(403, \"No key provided\");\n                    }\n                    var dba = $db.getSync(\"dba\", \"dba\");\n                    if (!dba || dba.key !== key) {\n                        return $response.html(403, \"Access denied\");\n                    }\n                    var tmpFile = $db.newId();\n                    $db.backupSync(tmpFile);\n                    $response.file(tmpFile, new Date().toISOString() + \".db\");\n                    require(\"fs\").unlink(tmpFile, function(e){\n                        if (e) {\n                            console.error(\"Can't remove file\", tmpFile, e);\n                        }\n                    });\n                "}],"store":""},"demoStore":{"type":"","groupAccess":"","ownerAccess":"","i18n":{"storeLabel":"Demo store"},"props":{"stringProperty":{"name":"","label":"String property","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"textInput"}},"filters":{},"objectLifeCycle":{"willCreate":"\n        return $db.nextSequenceString(\"demoStore\").then(res =\u003e {\n            $item.name = res;\n        });\n    "},"storeLifeCycle":{},"formTabs":null,"navOrder":0,"display":"list","html":"","label":"{{$i18n.storeLabel}}","store":""},"emailSettings":{"type":"single","access":[{"role":"root","permissions":"vcrux","condition":null}],"groupAccess":"","ownerAccess":"","navGroup":"config","i18n":{"en":{"pluralGenitiveLocal":"Email transport settings","pluralLocal":"Email transport settings","singularAccusativeLocal":"Email transport settings","singularLocal":"Email transport settings"},"ru":{"pluralGenitiveLocal":"Настройки отправки почты","pluralLocal":"Настройки отправки почты","singularAccusativeLocal":"Настройки отправки почты","singularLocal":"Настройки отправки почты"},"tr":{"pluralGenitiveLocal":"Email transport settings","pluralLocal":"Email transport settings","singularAccusativeLocal":"Email transport settings","singularLocal":"Email transport settings"}},"props":{"from":{"name":"","label":"From","type":"string","formOrder":50,"groupAccess":"","ownerAccess":"","display":"textInput"},"host":{"name":"","label":"Host","type":"string","formOrder":10,"groupAccess":"","ownerAccess":"","display":"textInput","required":true},"password":{"name":"","label":"Password","type":"string","formOrder":40,"groupAccess":"","ownerAccess":"","display":"password","required":true},"port":{"name":"","label":"Port","type":"int","formOrder":20,"groupAccess":"","ownerAccess":"","display":"numberInput","required":true},"testMode":{"name":"","label":"Test Mode","type":"bool","formOrder":60,"groupAccess":"","ownerAccess":"","display":"checkbox","default":false},"to":{"name":"","label":"(Test) To","type":"string","formOrder":70,"groupAccess":"","ownerAccess":"","display":"textInput","required":"$item.testMode","hidden":"!$item.testMode"},"username":{"name":"","label":"Username","type":"string","formOrder":30,"groupAccess":"","ownerAccess":"","display":"textInput","required":true}},"filters":null,"objectLifeCycle":{},"storeLifeCycle":{},"formTabs":null,"actions":[{"_id":"test","disableItemReadyCheck":false,"hideInHeader":false,"icon":"","label":"Test","multi":false,"script":"\n                    var email = require(\"email\");\n                    var msg = {\n                        to: $data.email,\n                        subject: \"TEST\",\n                        body: $data.body,\n                    };\n                    console.debug(msg);\n                    var e = email.send(msg, function (e) {\n                        if (e != null) {\n                            console.error(e);\n                        }\n                    });\n                    if (e != null) {\n                        return {error: e};\n                    }\n                    return {result: \"SUCCESS\"};\n                ","type":"form","groupAccess":"","ownerAccess":"","props":{"body":{"name":"","label":"Body","type":"","formOrder":30,"groupAccess":"","ownerAccess":"","display":"textInput","required":true},"email":{"name":"","label":"To","type":"","formOrder":10,"groupAccess":"","ownerAccess":"","display":"textInput","required":true},"subject":{"name":"","label":"Subject","type":"","formOrder":20,"groupAccess":"","ownerAccess":"","display":"textInput","required":true}}}],"navOrder":10,"display":"","html":"","label":"{{$i18n.pluralLocal}}","store":""},"landings":{"type":"","groupAccess":"","ownerAccess":"","i18n":{"storeLabel":"landings"},"props":{"email":{"name":"","label":"Email","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"text"}},"filters":null,"objectLifeCycle":{},"storeLifeCycle":{},"formTabs":null,"navOrder":0,"display":"list","html":"","label":"{{$i18n.storeLabel}}","httpHooks":[{"uri":"land","method":"POST","script":"\n                console.log($request.body);\n                return { type: \"JSON\", code: 200, rawData: {}, header: { \"Access-Control-Allow-Origin\": \"*\" } };\n            "}],"store":""},"profile":{"type":"","access":[{"role":"root","permissions":"vrux","condition":null},{"role":"all","permissions":"vrux","condition":{"_ownerId":{"$expression":"$user._id"}}}],"groupAccess":"","ownerAccess":"","navGroup":"profile","i18n":{"_ownerIdLabel":"Учетная запись","changePasswordAction":"Сменить пароль","infoTabLabel":"Информация","invalidPasswordError":"Текущий пароль не совпадает","lastNameLabel":"Фамилия","nameLabel":"Имя","newPasswordLabel":"Новый пароль","oldPasswordLabel":"Текущий пароль","passwordChangedMessage":"Пароль изменён","securityTabLabel":"Безопасность","sessionsLabel":"Сессии","storeLabel":"Профиль"},"props":{"_ownerId":{"name":"","label":"{{$i18n._ownerIdLabel}}","type":"ref","oppositeProp":"profileId","formTab":"info","formOrder":500,"access":[{"role":"root","permissions":"crud","condition":null}],"groupAccess":"","ownerAccess":"","display":"searchBox","searchBy":["login"],"store":"users","disabled":true},"lastName":{"name":"","label":"{{$i18n.lastNameLabel}}","type":"","formTab":"info","formOrder":10,"groupAccess":"","ownerAccess":"","display":"textInput","maxLength":50},"login":{"name":"","label":"{{$i18n.$stores.users.loginLabel}}","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"textInput"},"name":{"name":"","label":"{{$i18n.nameLabel}}","type":"","formTab":"info","formOrder":20,"groupAccess":"","ownerAccess":"","display":"textInput","maxLength":50},"securityActions":{"name":"","type":"action","formTab":"security","formOrder":0,"groupAccess":"","ownerAccess":"","display":"","actions":[{"_id":"changePassword","className":"btn btn-accent"}]},"sessions":{"name":"","label":"{{$i18n.sessionsLabel}}","type":"objectList","formTab":"info","formOrder":1000,"groupAccess":"","ownerAccess":"","display":"","disabled":true,"props":{"apiKey":{"name":"","label":"ID","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"text"},"connections":{"name":"","label":"Active connections","type":"int","formOrder":10,"groupAccess":"","ownerAccess":"","display":"text"}}}},"filters":{"userFilter":{"label":"User","display":"searchBox","searchBy":["name","email","clientId"],"store":"users","filterBy":"_id","multi":true,"query":{"_ownerId":"$value"}}},"objectLifeCycle":{},"storeLifeCycle":{"didStart":"\n                let r = 0;\n                let updateUserSessions = (session) =\u003e {\n                    let _r = ++r;\n                    var locker = \"sessions-update-\" + session.apiKey + \"-__v:\" + session.__v;\n                    console.log(\"Session locker:\", locker);\n                    sync.once(locker, () =\u003e {\n                        let userSessions = sessions.get().filter(s =\u003e s.userId === session.userId).map((s) =\u003e {\n                            return {\n                                \"apiKey\": s.apiKey,\n                                \"connections\": (s.connections || []).length,\n                            };\n                        });\n                        console.log(\"Sessions update for user\", session.userId, \"Sessions:\", JSON.stringify(userSessions));\n                        $db.get({ \"_ownerId\": session.userId }, \"profile\").then((p) =\u003e {\n                            if (_r === r) {\n                                console.log(\"Updating profile sessions\");\n                                $db.set({ \"_id\": p._id, \"sessions\": userSessions },\n                                    \"profile\",\n                                    { \"noValidate\": true },\n                                    (e, r) =\u003e {\n                                        console.log(\"Update error:\", e);\n                                    });\n                            }\n                        }).catch(() =\u003e {\n                            if (_r === r) {\n                                console.log(\"Profile not found, creating...\");\n                                $db.get(session.userId, \"users\").then(u =\u003e {\n                                    if (u == null) { throw new Error(\"user not found\") }\n                                    return $db.insert(\n                                        { \"_ownerId\": session.userId, \"sessions\": userSessions, \"login\": u.login },\n                                        \"profile\",\n                                        { \"noValidate\": true },\n                                        (e, r) =\u003e {\n                                            console.log(\"Create error:\", e);\n                                        });\n                                }).catch(e =\u003e console.log(\"Error while creating profile for user:\", session.userId));\n                            }\n                        });\n                    });\n                };\n                sessions.on(\"create\", updateUserSessions);\n                sessions.on(\"update\", updateUserSessions);\n                sessions.on(\"delete\", updateUserSessions);\n            "},"formTabs":[{"_id":"info","label":"{{$i18n.infoTabLabel}}"},{"_id":"security","label":"{{$i18n.securityTabLabel}}"}],"actions":[{"_id":"changePassword","disableItemReadyCheck":false,"hideInHeader":false,"icon":"","label":"{{$i18n.changePasswordAction}}","multi":false,"script":"\n                    let i18n = require(\"i18n\");\n                    if (!$data.newPassword || (!$data.oldPassword \u0026\u0026 !$user.noPassword)) {\n                        return \"Invalid args\";\n                    }\n                    let user;\n                    return $db.get($item._ownerId, \"users\").then((_user) =\u003e {\n                        if (_user._deleted) {\n                            throw new Error();\n                        }\n                        user = _user;\n                        if ($user.noPassword) {\n                            return;\n                        }\n                        if (user.password == null) {\n                            throw new Error();\n                        }\n                        let hash = require(\"hash\");\n                        return hash.calc($data.oldPassword, user.password.salt);\n                    }).then((d) =\u003e {\n                        if (!$user.noPassword \u0026\u0026 d !== user.password.key) {\n                            throw new UserError(i18n.get(\"profile.invalidPasswordError\", $user.lang));\n                        }\n                        return $db.set({ \"_id\": $item._ownerId, \"password\": $data.newPassword, noPassword: null }, \"users\");\n                    }).then(d =\u003e {\n                        $db.notify([$user._id], \"securityNotifications\", {\n                            \"message\": i18n.get(\"profile.passwordChangedMessage\", $user.lang),\n                        });\n                    });\n                ","type":"form","groupAccess":"","ownerAccess":"","props":{"newPassword":{"name":"","label":"{{$i18n.newPasswordLabel}}","type":"string","formOrder":1,"groupAccess":"","ownerAccess":"","display":"password","required":true},"oldPassword":{"name":"","label":"{{$i18n.oldPasswordLabel}}","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"password","required":"!$user.noPassword","hidden":"$user.noPassword"}}}],"navOrder":0,"display":"single","html":"","label":"{{$i18n.storeLabel}}","store":""},"profiles":{"type":"","baseStore":"profile","access":[{"role":"root","permissions":"vrux","condition":null}],"groupAccess":"","ownerAccess":"","navGroup":"config","i18n":{"_ownerIdLabel":"Учетная запись","changePasswordAction":"Сменить пароль","infoTabLabel":"Информация","invalidPasswordError":"Текущий пароль не совпадает","lastNameLabel":"Фамилия","nameLabel":"Имя","newPasswordLabel":"Новый пароль","oldPasswordLabel":"Текущий пароль","passwordChangedMessage":"Пароль изменён","securityTabLabel":"Безопасность","sessionsLabel":"Сессии","storeLabel":"Профили"},"headerTemplate":"{{#if $item.login}}{{$item.login}}{{else}}{{$item._ownerId}}{{/if}}","props":{"_ownerId":{"name":"","label":"{{$i18n._ownerIdLabel}}","type":"ref","oppositeProp":"profileId","formTab":"info","formOrder":500,"access":[{"role":"root","permissions":"crud","condition":null}],"groupAccess":"","ownerAccess":"","display":"searchBox","searchBy":["login"],"store":"users","disabled":true},"lastName":{"name":"","label":"{{$i18n.lastNameLabel}}","type":"","formTab":"info","formOrder":10,"groupAccess":"","ownerAccess":"","display":"textInput","maxLength":50},"login":{"name":"","label":"{{$i18n.$stores.users.loginLabel}}","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"textInput"},"name":{"name":"","label":"{{$i18n.nameLabel}}","type":"","formTab":"info","formOrder":20,"groupAccess":"","ownerAccess":"","display":"textInput","maxLength":50},"securityActions":{"name":"","type":"action","formTab":"security","formOrder":0,"groupAccess":"","ownerAccess":"","display":"","actions":[{"_id":"changePassword","className":"btn btn-accent"}]},"sessions":{"name":"","label":"{{$i18n.sessionsLabel}}","type":"objectList","formTab":"info","formOrder":1000,"groupAccess":"","ownerAccess":"","display":"","disabled":true,"props":{"apiKey":{"name":"","label":"ID","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"text"},"connections":{"name":"","label":"Active connections","type":"int","formOrder":10,"groupAccess":"","ownerAccess":"","display":"text"}}}},"filters":{"userFilter":{"label":"User","display":"searchBox","searchBy":["name","email","clientId"],"store":"users","filterBy":"_id","multi":true,"query":{"_ownerId":"$value"}}},"objectLifeCycle":{},"storeLifeCycle":{},"formTabs":[{"_id":"info","label":"{{$i18n.infoTabLabel}}"},{"_id":"security","label":"{{$i18n.securityTabLabel}}"}],"navOrder":1000,"display":"list","html":"","label":"{{$i18n.storeLabel}}","store":""},"run":{"type":"","access":[{"role":"root","permissions":"vcrudx","condition":null}],"groupAccess":"","ownerAccess":"","navGroup":"config","i18n":{"storeLabel":"Run JS"},"props":{"code":{"name":"","type":"string","formOrder":10,"groupAccess":"","ownerAccess":"","display":"codeEditor"},"name":{"name":"","label":"Script name","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"","default":"New script"},"response":{"name":"","type":"string","formOrder":30,"groupAccess":"","ownerAccess":"","display":"code"},"run":{"name":"","type":"action","formOrder":20,"groupAccess":"","ownerAccess":"","display":"","actions":[{"_id":"run"}]}},"filters":{},"objectLifeCycle":{},"storeLifeCycle":{},"formTabs":null,"actions":[{"_id":"run","clientPreScript":"\n                    return {\n                        \"code\": $item.code,\n                    };\n                ","disableItemReadyCheck":true,"hideInHeader":false,"icon":"","label":"Выполнить","multi":false,"script":"\n                    var f = new Function(\"$db\", \"$item\", \"require\", $data.code);\n                    var res = f($db, $item, require);\n                    if (res instanceof Promise) {\n                        return res.then(promiseRes =\u003e {\n                            if (typeof promiseRes !== \"string\") {\n                                promiseRes = JSON.stringify(promiseRes, \"\", \"  \");\n                            }\n                            return $db.set({ \"_id\": $item._id, \"response\": promiseRes + \"\" }, \"run\");\n                        }).catch(promiseErr =\u003e {\n                            if (typeof promiseErr !== \"string\") {\n                                promiseErr = JSON.stringify(promiseErr, \"\", \"  \");\n                            }\n                            return $db.set({ \"_id\": $item._id, \"response\": \"ERROR: \" + promiseErr }, \"run\");\n                        });\n                    }\n                    if (typeof res !== \"string\") {\n                        res = JSON.stringify(res, \"\", \"  \");\n                    }\n                    return $db.set({ \"_id\": $item._id, \"response\": res + \"\" }, \"run\");\n                ","groupAccess":"","ownerAccess":"","props":null}],"navOrder":100,"display":"list","html":"","label":"{{$i18n.storeLabel}}","store":""},"securityNotifications":{"type":"notification","access":[{"role":"root","permissions":"rud","condition":{"_ownerId":{"$expression":"$user._id"}}},{"role":"all","permissions":"rud","condition":{"_ownerId":{"$expression":"$user._id"}}}],"groupAccess":"","ownerAccess":"","i18n":null,"props":null,"filters":null,"objectLifeCycle":{},"storeLifeCycle":{},"formTabs":null,"navOrder":0,"display":"","html":"","store":""},"syslog":{"type":"","access":[{"role":"root","permissions":"vcrud","condition":null}],"groupAccess":"","ownerAccess":"","navGroup":"config","i18n":{"en":{"storeLabel":"Actions history"},"ru":{"storeLabel":"Журнал операций"}},"props":{"action":{"name":"","label":"Action","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"text"},"actionData":{"name":"","label":"Action data","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"text"},"actionSource":{"name":"","type":"","formOrder":0,"groupAccess":"","ownerAccess":"","display":"select","options":[{"label":"JavaScript API","value":"JS"},{"label":"WAMP API","value":"WAMP"},{"label":"HTTP API","value":"HTTP"},{"label":"System","value":"System"}]},"createdAt":{"name":"","label":"DateTime","type":"","formOrder":0,"groupAccess":"","ownerAccess":"","display":""},"itemId":{"name":"","label":"Item Id","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none"},"store":{"name":"","label":"Store","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"text"},"userId":{"name":"","type":"ref","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none","readOnly":true,"store":"users","populateIn":"user"},"userName":{"name":"","label":"User","type":"virtual","formOrder":0,"groupAccess":"","ownerAccess":"","display":"","load":"\n                    return $item.user ? $item.user.name : \"\";\n                "}},"filters":{},"objectLifeCycle":{},"storeLifeCycle":{},"formTabs":null,"navOrder":90,"display":"table","html":"","label":"{{$i18n.storeLabel}}","tableColumns":["createdAt","actionSource","userName","store","itemId","action","actionData"],"orderBy":"-createdAt","store":""},"users":{"type":"directory","access":[{"role":"root","permissions":"vcrudx","condition":null}],"groupAccess":"","ownerAccess":"","navGroup":"config","i18n":{"en":{"activeLabel":"Enabled","createdAt":"Registered: ","emailLabel":"Email","inactiveLabel":"Disabled","label":"Users","loginLabel":"Login","profileIdLabel":"Profile data"},"ru":{"activeLabel":"Включен","createdAt":"Зарегистрирован: ","emailLabel":"Email","inactiveLabel":"Отключен","label":"Пользователи","loginLabel":"Имя для входа","profileIdLabel":"Данные профиля"}},"headerProperty":"login","props":{"_activationExpires":{"name":"","type":"date","formOrder":0,"access":[{"role":"root","permissions":"crud","condition":null}],"groupAccess":"","ownerAccess":"","display":"none"},"_activationToken":{"name":"","type":"string","formOrder":0,"access":[{"role":"root","permissions":"crud","condition":null}],"groupAccess":"","ownerAccess":"","display":"none"},"_passwordResetExpires":{"name":"","type":"date","formOrder":0,"access":[{"role":"root","permissions":"crud","condition":null}],"groupAccess":"","ownerAccess":"","display":"none"},"_passwordResetToken":{"name":"","type":"string","formOrder":0,"access":[{"role":"root","permissions":"crud","condition":null}],"groupAccess":"","ownerAccess":"","display":"none"},"email":{"name":"","label":"{{$i18n.emailLabel}}","type":"string","formOrder":20,"access":[{"role":"root","permissions":"crud","condition":null},{"role":"all","permissions":"r","condition":{"_id":{"$expression":"$user._id"}}}],"groupAccess":"","ownerAccess":"","display":"textInput","maxLength":50,"pattern":"^\\S+@\\S+\\.\\S+$","disabled":true},"facebookId":{"name":"","type":"string","formOrder":0,"access":[{"role":"root","permissions":"crud","condition":null}],"groupAccess":"","ownerAccess":"","display":"none"},"isActive":{"name":"","label":"Активен","type":"bool","formOrder":0,"access":[{"role":"root","permissions":"crud","condition":null}],"groupAccess":"","ownerAccess":"","display":"none","default":true},"lang":{"name":"","label":"Language","type":"string","formOrder":30,"groupAccess":"","ownerAccess":"","display":"select","default":"en","options":[{"label":"English","value":"en"},{"label":"Русский","value":"ru"}]},"login":{"name":"","label":"{{$i18n.loginLabel}}","type":"string","formOrder":10,"access":[{"role":"root","permissions":"crud","condition":null},{"role":"all","permissions":"r","condition":{"_id":{"$expression":"$user._id"}}}],"groupAccess":"","ownerAccess":"","display":"textInput","maxLength":50,"disabled":true},"name":{"name":"","type":"","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none"},"noPassword":{"name":"","type":"bool","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none"},"password":{"name":"","type":"password","formOrder":0,"groupAccess":"","ownerAccess":"","display":"none"},"profileId":{"name":"","label":"{{$i18n.profileIdLabel}}","type":"ref","oppositeProp":"_ownerId","formOrder":0,"access":[{"role":"root","permissions":"crud","condition":null},{"role":"all","permissions":"r","condition":{"_id":{"$expression":"$user._id"}}}],"groupAccess":"","ownerAccess":"","display":"searchBox","searchBy":["login"],"store":"profiles","disabled":true},"roles":{"name":"","label":"Roles","type":"refList","formOrder":100,"access":[{"role":"root","permissions":"crud","condition":null}],"groupAccess":"","ownerAccess":"","display":"checkList","style":{"display":"block"},"store":"_roles","hidden":"$item._id === '00000000-0000-0000-0000-000000000000'"},"workspace":{"name":"","label":"Interface","type":"string","formOrder":40,"access":[{"role":"root","permissions":"crud","condition":null}],"groupAccess":"","ownerAccess":"","display":"none"}},"filters":null,"objectLifeCycle":{"willCreate":"\n\n            ","willRemove":"\n                if ($item._id === \"00000000-0000-0000-0000-000000000000\") {\n                    throw new UserError(\"Cannot delete root user\");\n                }\n            "},"storeLifeCycle":{"didStart":"\n                sync.once(\"$$usersDidStart\", () =\u003e {\n                    $db.waitForConnection().then(() =\u003e {\n                        console.log(\"Checking root user in DB...\");\n                        $db.get(\"00000000-0000-0000-0000-000000000000\", \"users\", (e, d) =\u003e {\n                            if (d == null || d._deleted) {\n                                console.log(\"Root user not exists, creating...\");\n                                $db.set({\n                                    \"_id\": \"00000000-0000-0000-0000-000000000000\",\n                                    \"roles\": [\"root\"],\n                                    \"login\": \"root\",\n                                    \"password\": \"toor\",\n                                }, \"users\", (e, d) =\u003e {\n                                    if (e != null) {\n                                        console.error(\"Error while creating root user:\", e);\n                                    } else {\n                                        console.log(\"Root user created\");\n                                    }\n                                });\n                            } else {\n                                console.log(\"Root user OK\");\n                            }\n                        });\n                    });\n                });\n            "},"formTabs":null,"actions":[{"_id":"activate","disableItemReadyCheck":false,"hidden":"$item.isActive || $item._id === '00000000-0000-0000-0000-000000000000'","hideInHeader":false,"icon":"","label":"Enable","multi":false,"script":"\n                    return $db.set({ \"_id\": $item._id, \"isActive\": true, \"_activationToken\": null }, \"users\");\n                ","groupAccess":"","ownerAccess":"","props":null},{"_id":"deactivate","disableItemReadyCheck":false,"hidden":"!$item.isActive || $item._id === '00000000-0000-0000-0000-000000000000'","hideInHeader":false,"icon":"material-icons text md-16 block","label":"Disable","multi":false,"script":"\n                    return $db.set({ \"_id\": $item._id, \"isActive\": false }, \"users\");\n                ","groupAccess":"","ownerAccess":"","props":null},{"_id":"changePassword","disableItemReadyCheck":false,"hideInHeader":false,"icon":"","label":"Change password","multi":false,"script":"\n                    if (!$data.newPassword) {\n                        throw new UserError(\"Please provide new password\");\n                    }\n                    return $db.set({ \"_id\": $item._id, \"password\": $data.newPassword }, \"users\");\n                ","type":"form","groupAccess":"","ownerAccess":"","props":{"newPassword":{"name":"","label":"New password","type":"string","formOrder":0,"groupAccess":"","ownerAccess":"","display":"textInput","required":true}}}],"navOrder":0,"display":"","html":"","label":"{{$i18n.label}}","labels":[{"icon":"fa fa-power-off","showInList":1,"hideInForm":true,"color":"{{#if $item.isActive}}#43A047{{else}}#ddd{{/if}}"},{"text":"{{#if $item.isActive}}{{$i18n.activeLabel}}{{else}}{{$i18n.inactiveLabel}}{{/if}}","color":"{{#if $item.isActive}}#00E676{{else}}#E0E0E0{{/if}}"},{"text":"{{$i18n.createdAt}} {{moment $item.createdAt format=\"D MMMM, dd, HH:mm\"}}","showInList":2,"hideInForm":true,"hidden":"!$item.createdAt"}],"httpHooks":[{"uri":"activation/:token","method":"GET","script":"\n                    let fs = require(\"fs\");\n                    let handlebars = require(\"handlebars\");\n                    let user;\n                    return $db.get({ _activationToken: $request.params[\"token\"] }, \"users\").then(_user =\u003e {\n                        user = _user;\n                        return $db.set({ _id: user._id, _activationToken: null, _activationExpires: null, isActive: true }, \"users\");\n                    }).then(() =\u003e {\n                        return fs.readLib(\"templates/activation-success.html\");\n                    }).then(template =\u003e {\n                        let body = handlebars.compile(template)({ user: user });\n                        return {\n                            \"type\": \"html\",\n                            \"data\": body,\n                        };\n                    }).catch(err =\u003e {\n                        console.debug(`[user activation] user not found with token: ${$request.params[\"token\"]}`, err);\n                        return fs.readLib(\"templates/activation-error.html\");\n                    }).then(template =\u003e {\n                        if (typeof template === \"object\") {\n                            return template;\n                        }\n                        let body = handlebars.compile(template)({});\n                        return {\n                            \"type\": \"html\",\n                            \"data\": body,\n                        };\n                    }).catch(err =\u003e {\n                        console.debug(`[user activation] error processing activation with token: ${$request.params[\"token\"]}`, err);\n                        return {\n                            \"type\": \"html\",\n                            \"data\": \"activation error\",\n                        };\n                    });\n                "}],"tasks":[{"schedule":"*/30  *   *   *   *","script":"\n                                        $db.find({\n                        query: {\n                            _activationExpires: { \"$lte\": new Date() },\n                            isActive: false,\n                        },\n                        take: 100,\n                    }, \"users\").then(res =\u003e {\n                        if (res.items.length \u003e 0) {\n                            console.debug(`[users][tasks][delete unactivated users] found ${res.items.length} unactivated users`);\n                            let promises = [];\n                            for (let user of res.items) {\n                                promises.push($db.delete(user._id, \"users\", { drop: true }));\n                            }\n                            return Promise.all(promises);\n                        }\n                    }).catch(err =\u003e {\n                        console.error(\"[users][tasks] can't process unactivated users\");\n                    }).then(() =\u003e {\n                                                return $db.find({\n                            query: {\n                                _passwordResetExpires: { \"$lte\": new Date() },\n                            },\n                            take: 100,\n                        }, \"users\");\n                    }).then(res =\u003e {\n                        if (res.items.length \u003e 0) {\n                            console.debug(`[users][tasks][rotten password reset requests] found ${res.items.length} rotten requests`);\n                            let promises = [];\n                            for (let user of res.items) {\n                                promises.push($db.set({ _id: user._id, _passwordResetExpires: null, _passwordResetToken: null }, \"users\"));\n                            }\n                            return Promise.all(promises);\n                        }\n                    }).catch(err =\u003e {\n                        console.error(\"[users][tasks] can't process rotten password reset requests\");\n                    });\n                "}],"store":""}}